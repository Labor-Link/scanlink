<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>BarcodePrinter_API</name>
  </assembly>
  <members>
    <member name="T:BarcodePrinter_API.BarcodePrinter">
      <summary>
            This class can be regarded as a subject, when adding the objects required for the printer output/input, the printer can be controlled to accomplish the desired results. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.#ctor">
      <summary>
            This is the constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.AddConnection(BarcodePrinter_API.Comm.IPrinterConnection)">
      <summary>
            This function is used to add the connection reference. Data type: <see cref="T:BarcodePrinter_API.Comm.IPrinterConnection" />. Later printer input/output controls are through this object.
            </summary>
      <param name="connection">[in] Input a connection object reference. Data type: <see cref="T:BarcodePrinter_API.Comm.IPrinterConnection" />.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            Invalid IPrinterConnection object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.AddEmulation(BarcodePrinter_API.Emulation.IEmulation)">
      <summary>
            This function is used to add the emulator reference. Data type: <see cref="T:BarcodePrinter_API.Emulation.IEmulation" />. Later the functions to be completed by the printer are all through this object.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.IEmulation" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid IEmulation object reference.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinter.Connection">
      <summary>
            Get the connection object reference, printer that wants to do output/input control can use this connection.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinter.CurrentEmulation">
      <summary>
            Get the current emulation object reference.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.DeleteLogger">
      <summary>
            This function is used to delete the log file.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinter.EnabledLogger">
      <summary>
            Set and get logging functions are enabled or disabled.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.GetEncoding">
      <summary>
            This function is used to get the string encoding in the output command. Default value: Encoding.Default.
            </summary>
      <returns>[out] Return the string encoding in the specified output command.</returns>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinter.LoggerPath">
      <summary>
            Set and get the path to the log file name.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.Print">
      <summary>
            This function is used to output commands store the buffer to the connection. Then, upon completion, data in the buffer will be cleared.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.SendFile(System.String)">
      <summary>
            This function is used to write the user edited file into the connection.
            </summary>
      <param name="filePath">[in] This is a file name, can be either absolute (recommend) path or relative path. Data type: Unicode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection or read data from a file.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinter.SetEncoding(System.Text.Encoding)">
      <summary>
            This function is used to set the string encoding in the output command. When the user inputs the string through the function, this encoding will be used to convert the string during output.
            </summary>
      <param name="encoding">[in] Used to specify the string encoding in the output command.</param>
    </member>
    <member name="T:BarcodePrinter_API.BarcodePrinterConnectionException">
      <summary>
            Exception thrown when creating or using a connection class error has occurred.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterConnectionException.#ctor">
      <summary>
            Initializes a new instance of the BarcodePrinterConnectionException class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterConnectionException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the BarcodePrinterConnectionException class with the specified error message.
            </summary>
      <param name="message">[in] Describe the error message. Data type: Unicode.</param>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinterConnectionException.Message">
      <summary>
            Get a message that describing the current exception.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.BarcodePrinterGeneralException">
      <summary>
            Exception thrown when non-Barcode Printer function error has occurred.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterGeneralException.#ctor">
      <summary>
            Initializes a new instance of the BarcodePrinterGeneralException class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterGeneralException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the BarcodePrinterGeneralException class with the specified error message.
            </summary>
      <param name="message">[in] Describe the error message. Data type: Unicode.</param>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinterGeneralException.Message">
      <summary>
            Get a message that describing the current exception.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
      <summary>
            Exception thrown when invalid parameters entered into Barcode Printer functions.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterIllegalArgumentException.#ctor">
      <summary>
            Initializes a new instance of the BarcodePrinterIllegalArgumentException class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterIllegalArgumentException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the BarcodePrinterIllegalArgumentException class with the specified error message.
            </summary>
      <param name="message">[in] Describe the error message. Data type: Unicode.</param>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinterIllegalArgumentException.Message">
      <summary>
            Get a message that describing the current exception.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.BarcodePrinterReadTimeoutException">
      <summary>
            Exception thrown when reading data in the Barcode Printer connection object timed out occurred.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterReadTimeoutException.#ctor">
      <summary>
            Initializes a new instance of the BarcodePrinterReadTimeoutException class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterReadTimeoutException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the BarcodePrinterReadTimeoutException class with the specified error message.
            </summary>
      <param name="message">[in] Describe the error message. Data type: Unicode.</param>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinterReadTimeoutException.Message">
      <summary>
            Get a message that describing the current exception.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
      <summary>
            Exception thrown when writing data in the Barcode Printer connection object timed out occurred.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterWriteTimeoutException.#ctor">
      <summary>
            Initializes a new instance of the BarcodePrinterWriteTimeoutException class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.BarcodePrinterWriteTimeoutException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the BarcodePrinterWriteTimeoutException class with the specified error message.
            </summary>
      <param name="message">[in] Describe the error message. Data type: Unicode.</param>
    </member>
    <member name="P:BarcodePrinter_API.BarcodePrinterWriteTimeoutException.Message">
      <summary>
            Get a message that describing the current exception.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.FileStreamConnection">
      <summary>
            This class is used to created a synchronous (Will Not Timeout) or asynchronous (Will Timeout) file connection. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.#ctor">
      <summary>
            This is the constructor. PC platform defaults to asynchronous mode for reading and writing; CE/Mobile platform defaults to synchronous mode for reading and writing.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.#ctor(System.String)">
      <summary>
            This is the constructor, use specified file path to initialize. PC platform defaults to asynchronous mode for reading and writing; CE/Mobile platform defaults to synchronous mode for reading and writing.
            </summary>
      <param name="path">[in] The relative or absolute path of the file to create. Data type: Unicode.</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.#ctor(System.String,System.Boolean)">
      <summary>
            This is the constructor, use specified file path to initialize.
            </summary>
      <param name="path">[in] The relative or absolute path of the file to create. Data type: Unicode.</param>
      <param name="useAsync">[in] The file to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.BytesAvailable">
      <summary>
            This function is used in asynchronous mode, used to read the unread valid data number in the current link. This call will not be locked.
            </summary>
      <returns>[out] Number of bytes not been read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.CanRead">
      <summary>
            Get whether the port supports the read function.
            </summary>
      <returns>'true' is can read; 'false' is cannot read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.CanWrite">
      <summary>
            Get whether the port supports the write function.
            </summary>
      <returns>true' is can write; 'false' is cannot write.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Close">
      <summary>
            This function is used to close the current file.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close file.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Dispose">
      <summary>
            This is used to release the resources used by the object.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Finalize">
      <summary>
            This is deconstructor.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.FileStreamConnection.InfiniteTimeout">
      <summary>
            This value represents the timeout should not occur. It is a constant value -1.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Init(System.String)">
      <summary>
            This function is used to initialize, used to specify the file path to be created. If the file has already been opened, then the function will close old file first.
            </summary>
      <param name="path">[in] The relative or absolute path of the file to create. Data type: Unicode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close file.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Init(System.String,System.Boolean)">
      <summary>
            This function is used to initialize, used to specify the file path to be created. If the file has already been opened, then the function will close old file first.
            </summary>
      <param name="path">[in] The relative or absolute path of the file to create. Data type: Unicode.</param>
      <param name="useAsync">[in] The file to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close file.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.IsAsync">
      <summary>
            Get the port is synchronous or asynchronous mode.
            </summary>
      <returns>'true' is asynchronous mode; 'false' is synchronous mode..</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.IsConnected">
      <summary>
            Get whether the port is in the connected state.
            </summary>
      <returns>true' is connected; 'false' is closed.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.Name">
      <summary>
            Get the file path sent to constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Open">
      <summary>
            This function is used to open a file. If the file has already been opened, then the function will close old file first.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open file.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to read the byte blocks from the file and transferred into the buffer specified. This call is non-blocking.
            </summary>
      <param name="array">[out] When this method returns, the buffer contains the specified byte array with the values between 'offset' and ('offset' + 'count' - 1) replaced by the bytes read from the current connection.</param>
      <param name="offset">[in] The byte offset in 'array' at which the read bytes will be placed in the buffer.</param>
      <param name="count">[in] The maximum number of bytes to be read.</param>
      <returns>[out] Return the total number of bytes read into the buffer. If unable to provide the number of bytes as required, the returning number may be smaller than the required number of bytes; if it has reached the end of data stream, then it will be zero.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.ReadTimeout">
      <summary>
            Get or set the maximum timeout time for reading data to this port.
            </summary>
      <returns>Timeout for reading data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.FileStreamConnection.InfiniteTimeout" />.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.ToString">
      <summary>
            This function's return format File:[File Name].
            </summary>
      <returns>[out] Return format File:[File Name].</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.WaitForData(System.Int32)">
      <summary>
            This function is used in asynchronous mode, when reading data in the current connection, it enters a wait state (sleep) until the time is up or <see cref="M:BarcodePrinter_API.Comm.FileStreamConnection.BytesAvailable" /> &gt; 0.
            </summary>
      <param name="maxTimeout">[in] Maximum time to wait for an initial response. Unit: milliseconds (ms).</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Write(System.Byte[])">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.FileStreamConnection.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.FileStreamConnection.WriteTimeout">
      <summary>
            Get or set the maximum timeout time for writing data to this port.
            </summary>
      <returns>Timeout for writing data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.FileStreamConnection.InfiniteTimeout" />.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Comm.IPrinterConnection">
      <summary>
            This interface is the basic interface used as a port.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.BytesAvailable">
      <summary>
            This function is used in asynchronous mode, used to read the unread valid data number in the current link. This call will not be locked.
            </summary>
      <returns>[out] Number of bytes not been read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.IPrinterConnection.CanRead">
      <summary>
            Get whether the port supports the read function.
            </summary>
      <returns>'true' is can read; 'false' is cannot read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.IPrinterConnection.CanWrite">
      <summary>
            Get whether the port supports the write function.
            </summary>
      <returns>true' is can write; 'false' is cannot write.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.Close">
      <summary>
            This function is used to close the current connection, and release all related resources.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred. System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close connection. Non-System.IO.IOException exception has occurred.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.IPrinterConnection.IsAsync">
      <summary>
            Get the port is synchronous or asynchronous mode.
            </summary>
      <returns>'true' is asynchronous mode; 'false' is synchronous mode..</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.IPrinterConnection.IsConnected">
      <summary>
            Get whether the port is in the connected state.
            </summary>
      <returns>true' is connected; 'false' is closed.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.Open">
      <summary>
            This function is used to open a connection.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred. System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open connection. Non-System.IO.IOException exception has occurred.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to read the byte blocks from the connection and transferred into the buffer specified. This call is non-blocking.
            </summary>
      <param name="array">[out] When this method returns, the buffer contains the specified byte array with the values between 'offset' and ('offset' + 'count' - 1) replaced by the bytes read from the current connection.</param>
      <param name="offset">[in] The byte offset in 'array' at which the read bytes will be placed in the buffer.</param>
      <param name="count">[in] The maximum number of bytes to be read.</param>
      <returns>[out] Return the total number of bytes read into the buffer. If unable to provide the number of bytes as required, the returning number may be smaller than the required number of bytes; if it has reached the end of data stream, then it will be zero.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established. System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to read data from the connection. Non-System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterReadTimeoutException">
            Read data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.IPrinterConnection.ReadTimeout">
      <summary>
            Get or set the maximum timeout time for reading data to this port.
            </summary>
      <returns>Timeout for reading data. Unit: milliseconds (ms).</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.ToString">
      <summary>
            This function is to return string depends on the method of the class.
            </summary>
      <returns>[out] Return the string described by the connection.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.WaitForData(System.Int32)">
      <summary>
            This function is used in asynchronous mode, when reading data in the current connection, it enters a wait state (sleep) until the time is up or <see cref="M:BarcodePrinter_API.Comm.IPrinterConnection.BytesAvailable" /> &gt; 0.
            </summary>
      <param name="maxTimeout">[in] Maximum time to wait for an initial response. Unit: milliseconds (ms).</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.Write(System.Byte[])">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established. System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection. Non-System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.IPrinterConnection.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established. System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection. Non-System.IO.IOException exception has occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.IPrinterConnection.WriteTimeout">
      <summary>
            Get or set the maximum timeout time for writing data to this port.
            </summary>
      <returns>Timeout for writing data. Unit: milliseconds (ms).</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Comm.ParallelConnection">
      <summary>
            This class is used to created a synchronous (Will Not Timeout) or asynchronous (Will Timeout) the parallel port (LPT) connection. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.#ctor">
      <summary>
            This is the constructor, the default is asynchronous mode for reading and writing.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.#ctor(System.String)">
      <summary>
            This is the constructor, you need to specify the parallel port (LPT) name.
            </summary>
      <param name="portName">[in] The parallel port name to create. Data type: Unicode; for example: "LPT1".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.#ctor(System.String,System.Boolean)">
      <summary>
            This is the constructor, you need to specify the parallel port (LPT) name.
            </summary>
      <param name="portName">[in] The parallel port name to create. Data type: Unicode; for example: "LPT1".</param>
      <param name="useAsync">[in] The parallel port to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.BytesAvailable">
      <summary>
            This function is used in asynchronous mode, used to read the unread valid data number in the current link. This call will not be locked.
            </summary>
      <returns>[out] Number of bytes not been read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.CanRead">
      <summary>
            Get whether the port supports the read function.
            </summary>
      <returns>'true' is can read; 'false' is cannot read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.CanWrite">
      <summary>
            Get whether the port supports the write function.
            </summary>
      <returns>true' is can write; 'false' is cannot write.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Close">
      <summary>
            This function is used to close the current file, and release all related resources.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close parallel port.
            </exception>
    </member>
    <member name="F:BarcodePrinter_API.Comm.ParallelConnection.DefaultPortName">
      <summary>
            This is the default name of the port. Data Type: Unicode; default Value:"LPT1".
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Dispose">
      <summary>
            This is used to release the resources used by the object.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Finalize">
      <summary>
            This is deconstructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.GetPortNames">
      <summary>
            Get the array of current computer parallel port (LPT) name.
            </summary>
      <returns>[out] Return the array of current computer parallel port (LPT) names. Data type: string array; for example: "LPT1".</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot get the array of current computer parallel port (LPT) name.
            </exception>
    </member>
    <member name="F:BarcodePrinter_API.Comm.ParallelConnection.InfiniteTimeout">
      <summary>
            This value represents the timeout should not occur. It is a constant value -1.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Init(System.String)">
      <summary>
            This function is used to initialize, used to specify the parallel port (LPT) name to be opened. If the parallel port (LPT) has already been opened for connection, then the function will close old parallel port (LPT) connection first.
            </summary>
      <param name="portName">[in] The parallel port name to create. Data type: Unicode; for example: "LPT1".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close parallel port.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Init(System.String,System.Boolean)">
      <summary>
            This function is used to initialize, used to specify the parallel port (LPT) name to be opened. If the parallel port (LPT) has already been opened for connection, then the function will close old parallel port (LPT) connection first.
            </summary>
      <param name="portName">[in] The parallel port name to create. Data type: Unicode; for example: "LPT1".</param>
      <param name="useAsync">[in] The parallel port to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close parallel port.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.IsAsync">
      <summary>
            Get the port is synchronous or asynchronous mode.
            </summary>
      <returns>'true' is asynchronous mode; 'false' is synchronous mode..</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.IsConnected">
      <summary>
            Get whether the port is in the connected state.
            </summary>
      <returns>true' is connected; 'false' is closed.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Open">
      <summary>
            This function is used to open parallel port (LPT) connection. If the parallel port (LPT) has already been opened for connection, then the function will close old parallel port (LPT) connection first.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open parallel port.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.PortName">
      <summary>
            Get the port name sent to the constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to read the byte blocks from the file and transferred into the buffer specified. This call is non-blocking.
            </summary>
      <param name="array">[out] When this method returns, the buffer contains the specified byte array with the values between 'offset' and ('offset' + 'count' - 1) replaced by the bytes read from the current connection.</param>
      <param name="offset">[in] The byte offset in 'array' at which the read bytes will be placed in the buffer.</param>
      <param name="count">[in] The maximum number of bytes to be read.</param>
      <returns>[out] Return the total number of bytes read into the buffer. If unable to provide the number of bytes as required, the returning number may be smaller than the required number of bytes; if it has reached the end of data stream, then it will be zero.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.ReadTimeout">
      <summary>
            Get or set the maximum timeout time for reading data to this port.
            </summary>
      <returns>Timeout for reading data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.ParallelConnection.InfiniteTimeout" />.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.ToString">
      <summary>
            This function's return format Parallel:[Port Name].
            </summary>
      <returns>[out] Return format Parallel:[Port Name].</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.WaitForData(System.Int32)">
      <summary>
            This function is used in asynchronous mode, when reading data in the current connection, it enters a wait state (sleep) until the time is up or <see cref="M:BarcodePrinter_API.Comm.ParallelConnection.BytesAvailable" /> &gt; 0.
            </summary>
      <param name="maxTimeout">[in] Maximum time to wait for an initial response. Unit: milliseconds (ms).</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Write(System.Byte[])">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelConnection.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelConnection.WriteTimeout">
      <summary>
            Get or set the maximum timeout time for writing data to this port.
            </summary>
      <returns>Timeout for writing data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.ParallelConnection.InfiniteTimeout" />.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Comm.ParallelDialog">
      <summary>
            This is a dialog box, which is used to setting up parallel port (LPT), and then open parallel port (LPT) using the set data.
            <remarks>This class does not support CE/Mobile Platform.</remarks></summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelDialog.#ctor">
      <summary>
            This is the constructor.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelDialog.Caption">
      <summary>
            Get or set the characters displayed in the title bar of message dialog.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.ParallelDialog.PortName">
      <summary>
            Get or set the parallel port name. For example:  "LPT1".
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelDialog.Reset">
      <summary>
            This function is used to reset the attribute back to default value. 
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.ParallelDialog.RunDialog(System.IntPtr)">
      <summary>
            This function is overridden in a derived class, specifies a common dialog box.
            </summary>
      <param name="hwndOwner">Represents the window handle of the owner window for the common dialog box.</param>
      <returns>[out] 'true' is correct; 'false' is incorrect.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Comm.SerialConnection">
      <summary>
            This class is used to created a asynchronous (Will Timeout) the serial port (RS-232) connection. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.#ctor">
      <summary>
            This is the constructor.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.#ctor(System.String)">
      <summary>
            This is the constructor, you need to specify the serial port (RS-232) name.
            </summary>
      <param name="portName">[in] The serial port name to create. Data type: Unicode; for example: "COM1".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.#ctor(System.String,System.Int32,BarcodePrinter_API.Comm.SerialParity,System.Int32,BarcodePrinter_API.Comm.SerialStopBits,BarcodePrinter_API.Comm.SerialHandshake)">
      <summary>
            This is the constructor, you need to specify the parameters required by the serial port (RS-232).
            </summary>
      <param name="portName">[in] The serial port name to create. Data type: Unicode; for example: "COM1".</param>
      <param name="baudRate">[in] Baud rate.</param>
      <param name="parity">[in] Parity-checking bits. Use <see cref="T:BarcodePrinter_API.Comm.SerialParity" /> enum to set up, the same as <see cref="T:System.IO.Ports.Parity" /> enum.</param>
      <param name="dataBits">[in] Data bits value. Range: 5~8.</param>
      <param name="stopBits">[in] The stop bits value. Use <see cref="T:BarcodePrinter_API.Comm.SerialStopBits" /> enum to set up, the same as <see cref="T:System.IO.Ports.StopBits" /> enum.</param>
      <param name="handshake">[in] Handshake protocol. Use <see cref="T:BarcodePrinter_API.Comm.SerialHandshake" /> enum to set up, the same as <see cref="T:System.IO.Ports.Handshake" /> enum.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.BytesAvailable">
      <summary>
            This function is used in asynchronous mode, used to read the unread valid data number in the current link. This call will not be locked.
            </summary>
      <returns>[out] Number of bytes not been read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.CanRead">
      <summary>
            Get whether the port supports the read function.
            </summary>
      <returns>'true' is can read; 'false' is cannot read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.CanWrite">
      <summary>
            Get whether the port supports the write function.
            </summary>
      <returns>true' is can write; 'false' is cannot write.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Close">
      <summary>
            This function is used to close the serial port (RS-232) connection and release all related resources.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close serial port.
            </exception>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.DefaultBaudRate">
      <summary>
            This is the default baud rate of the port. Default value: 9600.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.DefaultDataBits">
      <summary>
            This is the default data bit value for the port. Default value: 8.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.DefaultHandshake">
      <summary>
            This is the default handshake protocol for the port. Default value: <see cref="F:BarcodePrinter_API.Comm.SerialHandshake.None" />.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.DefaultParity">
      <summary>
            This is the default parity check bit for the port. Default value: <see cref="F:BarcodePrinter_API.Comm.SerialParity.None" />.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.DefaultPortName">
      <summary>
            This is the default name of the port. Data Type: Unicode; default Value:"COM1".
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.DefaultStopBits">
      <summary>
            This is the default number of stop bits for the port. Default value: <see cref="F:BarcodePrinter_API.Comm.SerialStopBits.One" />.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Dispose">
      <summary>
            This is used to release the resources used by the object.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Finalize">
      <summary>
            This is deconstructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.GetPortNames">
      <summary>
            Get the array of current computer serial port (RS-232) name.
            </summary>
      <returns>[out] Return the array of current computer serial port (RS-232) name. Data type: String array; for example: "COM1".</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot get the array of current computer serial port (RS-232) name.
            </exception>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialConnection.InfiniteTimeout">
      <summary>
            This value represents the timeout should not occur. It is a constant value -1.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Init(System.String)">
      <summary>
            This function is used to initialize, used to specify the name of serial port (RS-232) to be opened. If the serial port (RS-232) has already been opened for connection, then the function will close old serial port connection first.
            </summary>
      <param name="portName">[in] The serial port name to create. Data type: Unicode; for example: "COM1".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close serial port.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Init(System.String,System.Int32,BarcodePrinter_API.Comm.SerialParity,System.Int32,BarcodePrinter_API.Comm.SerialStopBits,BarcodePrinter_API.Comm.SerialHandshake)">
      <summary>
            This function is used to initialize, used to specify the parameters required to open the serial port (RS-232). If the serial port (RS-232) has already been opened for connection, then the function will close old serial port connection first.
            </summary>
      <param name="portName">[in] The serial port name to create. Data type: Unicode; for example: "COM1".</param>
      <param name="baudRate">[in] Baud rate.</param>
      <param name="parity">[in] Parity-checking bits. Use <see cref="T:BarcodePrinter_API.Comm.SerialParity" /> enum to set up, the same as <see cref="T:System.IO.Ports.Parity" /> enum.</param>
      <param name="dataBits">[in] Data bits value. Range: 5~8.</param>
      <param name="stopBits">[in] The stop bits value. Use <see cref="T:BarcodePrinter_API.Comm.SerialStopBits" /> enum to set up, the same as <see cref="T:System.IO.Ports.StopBits" /> enum.</param>
      <param name="handshake">[in] Handshake protocol. Use <see cref="T:BarcodePrinter_API.Comm.SerialHandshake" /> enum to set up, the same as <see cref="T:System.IO.Ports.Handshake" /> enum.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close serial port.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.IsAsync">
      <summary>
            Get the port is synchronous or asynchronous mode.
            </summary>
      <returns>'true' is asynchronous mode; 'false' is synchronous mode..</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.IsConnected">
      <summary>
            Get whether the port is in the connected state.
            </summary>
      <returns>true' is connected; 'false' is closed.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Open">
      <summary>
            This function is used to open serial port (RS-232) connection. If the serial port (RS-232) has already been opened for connection, then the function will close old serial port connection first.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open serial port.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.PortName">
      <summary>
            Get the port name sent to the constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to read the given number of bytes from serial port (RS-232) and transferred into buffer specified. This call is non-blocking.
            </summary>
      <param name="array">[out] When this method returns, the buffer contains the specified byte array with the values between 'offset' and ('offset' + 'count' - 1) replaced by the bytes read from the current connection.</param>
      <param name="offset">[in] The byte offset in 'array' at which the read bytes will be placed in the buffer.</param>
      <param name="count">[in] The maximum number of bytes to be read.</param>
      <returns>[out] Return the total number of bytes read into the buffer. If unable to provide the number of bytes as required, the returning number may be smaller than the required number of bytes; if it has reached the end of data stream, then it will be zero.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to read data from the connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterReadTimeoutException">
            Read data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.ReadTimeout">
      <summary>
            Get or set the maximum timeout time for reading data to this port.
            </summary>
      <returns>Timeout for reading data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.SerialConnection.InfiniteTimeout" />.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.ToString">
      <summary>
            This function's return format Serial:[Port Name]:[Baud Rate]:[Data Bits]:[Parity]:[Stop Bits]:[Handshake]. 
            </summary>
      <returns>[out] Return format Serial:[Port Name]:[Baud Rate]:[Data Bits]:[Parity]:[Stop Bits]:[Handshake].</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.WaitForData(System.Int32)">
      <summary>
            This function is used in asynchronous mode, when reading data in the current connection, it enters a wait state (sleep) until the time is up or <see cref="M:BarcodePrinter_API.Comm.SerialConnection.BytesAvailable" /> &gt; 0.
            </summary>
      <param name="maxTimeout">[in] Maximum time to wait for an initial response. Unit: milliseconds (ms).</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Write(System.Byte[])">
      <summary>
            This function is used to write specified byte blocks of the buffer to the serial port (RS-232).
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialConnection.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to write specified byte blocks of the buffer to the serial port (RS-232).
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialConnection.WriteTimeout">
      <summary>
            Get or set the maximum timeout time for writing data to this port.
            </summary>
      <returns>Timeout for writing data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.SerialConnection.InfiniteTimeout" />.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Comm.SerialDialog">
      <summary>
            This is a dialog box, which is used to setting up serial port (RS-232), and then open the serial port (RS-232) using the set data.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialDialog.#ctor">
      <summary>
            This is the constructor.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.BaudRate">
      <summary>
            Get or set the baud rate.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.BaudRateEnabled">
      <summary>
            Get or set the baud rate to be enabled or disabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.BaudRateList">
      <summary>
            Get or set the baud rate, its list in ComboBox.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.BaudRateVisible">
      <summary>
            Get or set the baud rate to be visible or hidden.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.Caption">
      <summary>
            Get or set the characters displayed in the title bar of message dialog.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.DataBits">
      <summary>
            Get or set the data bits value.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.DataBitsEnabled">
      <summary>
            Get or set the data bits value to be enabled or disabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.DataBitsList">
      <summary>
            Get or set the data bits value, its list in ComboBox.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.DataBitsVisible">
      <summary>
            Get or set the data bits value to be visible or hidden.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.FriendyName">
      <summary>
            Get the serial port easy to remember name. for example: "Communication port (COM1)".
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.FriendyNameVisible">
      <summary>
            Get or set the serial port easy to remember name is visible or hidden.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.Handshake">
      <summary>
            Get or set the handshake protocol.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.HandshakeEnabled">
      <summary>
            Get or set the handshake protocol to be enabled or disabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.HandshakeList">
      <summary>
            Get or set the handshake protocol, its list in ComboBox.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.HandshakeVisible">
      <summary>
            Get or set the handshake protocol to be visible or hidden.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.Parity">
      <summary>
            Get or set the parity-checking bits.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.ParityEnabled">
      <summary>
            Get or set the parity-checking bits to be enabled or disabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.ParityList">
      <summary>
            Get or set the parity-checking bits, its list in ComboBox.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.ParityVisible">
      <summary>
            Get or set the parity-checking bits to be visible or hidden.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.PortName">
      <summary>
            Get or set the serial port name. For example: "COM1".
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.PortNameEnabled">
      <summary>
            Get or set the serial port name to be enabled or disabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.PortNameVisible">
      <summary>
            Get or set the serial port name to be visible or hidden.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialDialog.Reset">
      <summary>
            This function is used to reset the attribute back to default value. 
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.SerialDialog.RunDialog(System.IntPtr)">
      <summary>
            This function is overridden in a derived class, specifies a common dialog box.
            </summary>
      <param name="hwndOwner">Represents the window handle of the owner window for the common dialog box.</param>
      <returns>[out] 'true' is correct; 'false' is incorrect.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.StopBits">
      <summary>
            Get or set the stop bits value.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.StopBitsEnabled">
      <summary>
            Get or set the stop bits value to be enabled or disabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.StopBitsList">
      <summary>
            Get or set the stop bits value, its list in ComboBox.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.SerialDialog.StopBitsVisible">
      <summary>
            Get or set the stop bits value to be visible or hidden.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.SerialHandshake">
      <summary>
            This is the control protocol for serial port communication used on the BarcodePrinter_API.Comm.SerialConnection object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialHandshake.None">
      <summary>
            There is no control for handshake.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialHandshake.XOnXOff">
      <summary>
            Use the XON/XOFF software control protocol. Send XOFF control to stop data transfer. Send XON control to continue transmission. Use these software controls instead of Request to Send (RTS) and Clear to Send (CTS) hardware controls.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialHandshake.RequestToSend">
      <summary>
            Use Request-to-Send (RTS) hardware flow control. RTS indicates that data is available for transmission. If the input buffer is full, the RTS line will be set to 'false'. When there is more space in the input buffer, the RTS line will be set to 'true'.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialHandshake.RequestToSendXOnXOff">
      <summary>
            Use both Request-to-Send (RTS) hardware control and XON/XOFF software control.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.SerialParity">
      <summary>
            This is the parity bit used on the BarcodePrinter_API.Comm.SerialConnection object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialParity.None">
      <summary>
            No parity check occurs.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialParity.Odd">
      <summary>
            Set the parity bit so that the bitset count is odd.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialParity.Even">
      <summary>
            Set the parity bit so that the bitset count is even.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialParity.Mark">
      <summary>
            Keep the parity bit set at 1.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialParity.Space">
      <summary>
            Keep the parity bit set at 0.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.SerialStopBits">
      <summary>
            This is the stop bits used on the BarcodePrinter_API.Comm.SerialConnection object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialStopBits.None">
      <summary>
            The stop bit is not used. This value is not supported, if set this value will throw BarcodePrinter_API.BarcodePrinterIllegalArgumentException.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialStopBits.One">
      <summary>
            Use one stop bits.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialStopBits.Two">
      <summary>
            Use two stop bits.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.SerialStopBits.OnePointFive">
      <summary>
            Use 1.5 stop bits.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.TCPConnection">
      <summary>
            This class is used to created a synchronous (Will Not Timeout) or asynchronous (Will Timeout) TCP/IP Client connection. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>
            This is the constructor, you need to specify the IP Address, and Port number. PC platform defaults to asynchronous mode for reading and writing; CE/Mobile platform defaults to synchronous mode for reading and writing.
            </summary>
      <param name="address">[in] The IP Address of the TCP connection to create. Data type: <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port">[in] The Port number of the TCP connection to create. For example: 9100 for a network printer, 2000 for Wi-Fi.</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.#ctor(System.String,System.Int32)">
      <summary>
            This is the constructor, you need to specify the TCP Host Name or IP Address, and Port number. PC platform defaults to asynchronous mode for reading and writing; CE/Mobile platform defaults to synchronous mode for reading and writing.
            </summary>
      <param name="hostnameOrAddress">[in] The Host Name or IP Address of the TCP connection to create. Data type: Unicode; for example: "192.168.6.5".</param>
      <param name="port">[in] The Port number of the TCP connection to create. For example: 9100 for a network printer, 2000 for Wi-Fi.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open TCP.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>
            This is the constructor, you need to specify the TCP Host Name or IP Address, and Port number.
            </summary>
      <param name="hostnameOrAddress">[in] The Host Name or IP Address of the TCP connection to create. Data type: Unicode; for example: "192.168.6.5".</param>
      <param name="port">[in] The Port number of the TCP connection to create. For example: 9100 for a network printer, 2000 for Wi-Fi.</param>
      <param name="useAsync">[in] The USB to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open TCP.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.Address">
      <summary>
            Get the IP Address sent to the constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.BytesAvailable">
      <summary>
            This function is used in asynchronous mode, used to read the unread valid data number in the current link. This call will not be locked.
            </summary>
      <returns>[out] Number of bytes not been read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.CanRead">
      <summary>
            Get whether the port supports the read function.
            </summary>
      <returns>'true' is can read; 'false' is cannot read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.CanWrite">
      <summary>
            Get whether the port supports the write function.
            </summary>
      <returns>true' is can write; 'false' is cannot write.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Close">
      <summary>
            This function is used to close the current file, and release all related resources.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.TCPConnection.DefaultAddress">
      <summary>
            This is the default address for IP. Data type: Unicode; default value: "0.0.0.0".
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.TCPConnection.DefaultPort">
      <summary>
            This is the default port for IP. Default value: 9100.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Dispose">
      <summary>
            This is used to release the resources used by the object.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Finalize">
      <summary>
            This is deconstructor.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.TCPConnection.InfiniteTimeout">
      <summary>
            This value represents the timeout should not occur. It is a constant value -1.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Init(System.Net.IPAddress,System.Int32)">
      <summary>
            This function is used to initialize, used to specify the IP Address, and Port number for opening TCP. If the TCP has already been opened for connection, then the function will close old TCP connection first.
            </summary>
      <param name="address">[in] The IP Address of the TCP connection to create. Data type: <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port">[in] The Port number of the TCP connection to create. For example: 9100 for a network printer, 2000 for Wi-Fi.</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Init(System.String,System.Int32)">
      <summary>
            This function is used to initialize, used to specify the Host Name or IP Address, and Port number for opening TCP. If the TCP has already been opened for connection, then the function will close old TCP connection first.
            </summary>
      <param name="hostnameOrAddress">[in] The Host Name or IP Address of the TCP connection to create. Data type: Unicode; for example: "192.168.6.5".</param>
      <param name="port">[in] The Port number of the TCP connection to create. For example: 9100 for a network printer, 2000 for Wi-Fi.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open TCP.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Init(System.String,System.Int32,System.Boolean)">
      <summary>
            This function is used to initialize, used to specify the Host Name or IP Address, and Port number for opening TCP. If the TCP has already been opened for connection, then the function will close old TCP connection first.
            </summary>
      <param name="hostnameOrAddress">[in] The Host Name or IP Address of the TCP connection to create. Data type: Unicode; for example: "192.168.6.5".</param>
      <param name="port">[in] The Port number of the TCP connection to create. For example: 9100 for a network printer, 2000 for Wi-Fi.</param>
      <param name="useAsync">[in] The USB to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open TCP.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.IPAddressNonTransitional(System.Boolean,System.Net.IPAddress)">
      <summary>
            This function is used to return the address string of IPv4(XXX.XXX.XXXX.XXXX) or IPv6(XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX).
            </summary>
      <param name="isLower">[in] For IPv6, use uppercase or lowercase. 'true' is lowercase, 'false' is uppercase.</param>
      <param name="address">[in] This is the IP Address to convert. Data type: <see cref="T:System.Net.IPAddress" />.</param>
      <returns>[out] Return an IPv4 or IP6 address string. If not IPv4 or IPv6, returns an empty string.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.IsAsync">
      <summary>
            Get the port is synchronous or asynchronous mode.
            </summary>
      <returns>'true' is asynchronous mode; 'false' is synchronous mode..</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.IsConnected">
      <summary>
            Get whether the port is in the connected state.
            </summary>
      <returns>true' is connected; 'false' is closed.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Open">
      <summary>
            This function is used to open TCP connection. If the TCP has already been opened for connection, then the function will close old TCP connection first.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open TCP.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.Port">
      <summary>
            Get the Port number sent to the constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to read the byte blocks from the file and transferred into the buffer specified. This call is non-blocking.
            </summary>
      <param name="array">[out] When this method returns, the buffer contains the specified byte array with the values between 'offset' and ('offset' + 'count' - 1) replaced by the bytes read from the current connection.</param>
      <param name="offset">[in] The byte offset in 'array' at which the read bytes will be placed in the buffer.</param>
      <param name="count">[in] The maximum number of bytes to be read.</param>
      <returns>[out] Return the total number of bytes read into the buffer. If unable to provide the number of bytes as required, the returning number may be smaller than the required number of bytes; if it has reached the end of data stream, then it will be zero.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to read data from the connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterReadTimeoutException">
            Read data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.ReadTimeout">
      <summary>
            Get or set the maximum timeout time for reading data to this port.
            </summary>
      <returns>Timeout for reading data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.TCPConnection.InfiniteTimeout" />.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.ToString">
      <summary>
            This function's return format TCP:[IP Address][:][Port Number].
            </summary>
      <returns>[out] Return format TCP:[IP Address][:][Port Number].</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.WaitForData(System.Int32)">
      <summary>
            This function is used in asynchronous mode, when reading data in the current connection, it enters a wait state (sleep) until the time is up or <see cref="M:BarcodePrinter_API.Comm.TCPConnection.BytesAvailable" /> &gt; 0.
            </summary>
      <param name="maxTimeout">[in] Maximum time to wait for an initial response. Unit: milliseconds (ms).</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Write(System.Byte[])">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPConnection.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O Error occurred, or connection is not established.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPConnection.WriteTimeout">
      <summary>
            Get or set the maximum timeout time for writing data to this port.
            </summary>
      <returns>Timeout for writing data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.TCPConnection.InfiniteTimeout" />.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range. System.ArgumentOutOfRangeException exception has occurred.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Comm.TCPDialog">
      <summary>
            This is a dialog box, which is used to select the TCP/IP Address/Port, and then open the TCP/IP using the selected Address/Port.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPDialog.#ctor">
      <summary>
            This is the constructor.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.Address">
      <summary>
            Get or set the value of IP Address.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.AddressList">
      <summary>
            Get or set a list of IP Addresses on the ListView object. This value is only used when <see cref="P:BarcodePrinter_API.Comm.TCPDialog.MultiSelect" /> is 'true'.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.Caption">
      <summary>
            Get or set the characters displayed in the title bar of message dialog.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.EnablePort">
      <summary>
            Get or set whether the port is enabled.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.MessageBoxCaption">
      <summary>
            Get or set the characters displayed in the title bar of message dialog.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.MultiSelect">
      <summary>
            Get or set whether there is a ListView object for list selection, only this value is 'true', will use  <see cref="P:BarcodePrinter_API.Comm.TCPDialog.AddressList" />.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.Port">
      <summary>
            Get or set the Port number.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.PortList">
      <summary>
            Get or set the list of Port numbers on the Combo object.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPDialog.Reset">
      <summary>
            This function is used to reset the attribute back to default value. 
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPDialog.RunDialog(System.IntPtr)">
      <summary>
            This function is overridden in a derived class, specifies a common dialog box.
            </summary>
      <param name="hwndOwner">Represents the window handle of the owner window for the common dialog box.</param>
      <returns>[out] 'true' is correct; 'false' is incorrect.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.TCPDialog.SupportNonIPAddress">
      <summary>
            Get or set string that support non-IPv4 or IPv6 formats.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.TCPDialog.TCPListItem">
      <summary>
            This class is used to store TCP/IP Address.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.TCPDialog.TCPListItem.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>BarcodePrinter_API.Comm.TCPDialog.TCPListItem</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.TCPDialog.TCPListItem.Address">
      <summary>
            This is IP Address.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.TCPDialog.TCPListItem.Checked">
      <summary>
            This is whether Enabled.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Comm.TCPDialog.TCPListItem.Port">
      <summary>
            This is Port Number.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Comm.USBConnection">
      <summary>
            This class is used to created a synchronous (Will Not Timeout) or asynchronous (Will Timeout) USB connection. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.#ctor">
      <summary>
            This is the constructor, the default is asynchronous mode for reading and writing.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.#ctor(System.String)">
      <summary>
            This is the constructor, you need to specify the USB device path, and the default is asynchronous mode for reading and writing.
            </summary>
      <param name="devicePath">[in] USB device path to create. Data type: Unicode; for example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.#ctor(System.String,System.Boolean)">
      <summary>
            This is the constructor, you need to specify the USB device path, and specify to use synchronous or asynchronous mode for reading and writing.
            </summary>
      <param name="devicePath">[in] USB device path to create. Data type: Unicode; for example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".</param>
      <param name="useAsync">[in] The USB to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.BytesAvailable">
      <summary>
            This function is used in asynchronous mode, used to read the unread valid data number in the current link. This call will not be locked.
            </summary>
      <returns>[out] Number of bytes not been read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.CanRead">
      <summary>
            Get whether the port supports the read function.
            </summary>
      <returns>'true' is can read; 'false' is cannot read.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.CanWrite">
      <summary>
            Get whether the port supports the write function.
            </summary>
      <returns>true' is can write; 'false' is cannot write.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Close">
      <summary>
            This function is used to close the current USB connection, and release all related resources.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close USB.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.DevicePath">
      <summary>
            Get the USB device path sent to the constructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Dispose">
      <summary>
            This is used to release the resources used by the object.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Finalize">
      <summary>
            This is deconstructor.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.GetDevicePaths">
      <summary>
            Get the array of current computer USB device paths.
            </summary>
      <returns>[out] Return the array of current computer USB device paths. Data type: Unicode; for example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot get the array of current computer USB device paths.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.GetDevicePaths(System.String[]@,System.String[]@)">
      <summary>
            Get the array of current computer USB device paths, an array of hardware IDs, and an array of device names.
            </summary>
      <param name="hardwareID">[out] Return an array of hardware IDs. Data type: String array.</param>
      <param name="modelName">[out] Return an array of device names. Data type: String array.</param>
      <returns>[out] Return the array of current computer USB device paths. Data type: Unicode; for example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot get the array of current computer USB device paths.
            </exception>
    </member>
    <member name="F:BarcodePrinter_API.Comm.USBConnection.InfiniteTimeout">
      <summary>
            This value represents the timeout should not occur. It is a constant value -1.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Init(System.String)">
      <summary>
            This function is used to initialize, used to specify the USB device path to be opened. If the USB has already been opened for connection, then the function will close old USB connection first.
            </summary>
      <param name="devicePath">[in] USB device path to create. Data type: Unicode; for example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close USB.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Init(System.String,System.Boolean)">
      <summary>
            This function is used to initialize, used to specify the USB device path to be opened. If the USB has already been opened for connection, then the function will close old USB connection first.
            </summary>
      <param name="devicePath">[in] USB device path to create. Data type: Unicode; for example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".</param>
      <param name="useAsync">[in] The USB to create is in synchronous or asynchronous mode. 'true' is asynchronous mode; 'false' is synchronous mode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot close USB.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.IsAsync">
      <summary>
            Get the port is synchronous or asynchronous mode.
            </summary>
      <returns>'true' is asynchronous mode; 'false' is synchronous mode..</returns>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.IsConnected">
      <summary>
            Get whether the port is in the connected state.
            </summary>
      <returns>true' is connected; 'false' is closed.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Open">
      <summary>
            This function is used to open USB connection. If the USB has already been opened for connection, then the function will close old USB connection first.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Cannot open USB.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to read the byte blocks from the file and transferred into the buffer specified. This call is non-blocking.
            </summary>
      <param name="array">[out] When this method returns, the buffer contains the specified byte array with the values between 'offset' and ('offset' + 'count' - 1) replaced by the bytes read from the current connection.</param>
      <param name="offset">[in] The byte offset in 'array' at which the read bytes will be placed in the buffer.</param>
      <param name="count">[in] The maximum number of bytes to be read.</param>
      <returns>[out] Return the total number of bytes read into the buffer. If unable to provide the number of bytes as required, the returning number may be smaller than the required number of bytes; if it has reached the end of data stream, then it will be zero.</returns>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to read data from the connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterReadTimeoutException">
            Read data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.ReadTimeout">
      <summary>
            Get or set the maximum timeout time for reading data to this port.
            </summary>
      <returns>Timeout for reading data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.USBConnection.InfiniteTimeout" />.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.ToString">
      <summary>
            This function's return format USB:[Device Path].
            </summary>
      <returns>[out] Return format USB:[Device Path].</returns>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.WaitForData(System.Int32)">
      <summary>
            This function is used in asynchronous mode, when reading data in the current connection, it enters a wait state (sleep) until the time is up or <see cref="M:BarcodePrinter_API.Comm.USBConnection.BytesAvailable" /> &gt; 0.
            </summary>
      <param name="maxTimeout">[in] Maximum time to wait for an initial response. Unit: milliseconds (ms).</param>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Write(System.Byte[])">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBConnection.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to write specified byte blocks of the buffer to the connection.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBConnection.WriteTimeout">
      <summary>
            Get or set the maximum timeout time for writing data to this port.
            </summary>
      <returns>Timeout for writing data. Unit: milliseconds (ms); default value: <see cref="F:BarcodePrinter_API.Comm.USBConnection.InfiniteTimeout" />.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Comm.USBDialog">
      <summary>
            This is a dialog box, which is used to select the USB device, and then open the USB using the selected device path.
            <remarks>This class does not support CE/Mobile Platform.</remarks></summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBDialog.#ctor">
      <summary>
            This is the constructor.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBDialog.Caption">
      <summary>
            Get or set the characters displayed in the title bar of message dialog.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBDialog.DevicePath">
      <summary>
            Get or set the USB device path. For example: "\\?\USB#Vid_1664_Pid_024a#000000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}".
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBDialog.HardwareID">
      <summary>
            Get the USB hardware ID, the information includes VID and PID.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Comm.USBDialog.ModelName">
      <summary>
            Get the USB device name.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBDialog.Reset">
      <summary>
            This function is used to reset the attribute back to default value. 
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Comm.USBDialog.RunDialog(System.IntPtr)">
      <summary>
            This function is overridden in a derived class, specifies a common dialog box.
            </summary>
      <param name="hwndOwner">Represents the window handle of the owner window for the common dialog box.</param>
      <returns>[out] 'true' is correct; 'false' is incorrect.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.IEmulation">
      <summary>
            This interface is the basic interface used as an emulator.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.IEmulation.Parent">
      <summary>
            Get or set a reference to the parent object, which is the <see cref="T:BarcodePrinter_API.BarcodePrinter">BarcodePrinter</see> object.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid BarcodePrinter object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.IEmulation.PrintOut">
      <summary>
            This function is used to output the commands in the emulator's temporary area to the connection. Then, when complete, the data in the temporary area will be cleared. These commands are converted from functions called by the user.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.IEmulation.ToString">
      <summary>
            This function is to return string depends on the method of the class.
            </summary>
      <returns>[out] Return the string described by the connection.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB">
      <summary>
            This class is the subject of PPLB emulator, including all different functions of PPLB emulator. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB.#ctor">
      <summary>
            This is the constructor, which will automatically create the objects needed for this emulation.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, not enough memory.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.BarcodeUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil">PPLB_BarcodeUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.FormUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil">PPLB_FormUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.GraphicsUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil">PPLB_GraphicsUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.IOUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil">PPLB_IOUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.MAX_LABEL_WH">
      <summary>
            This value represents the value of maximum length and width of the label. Unit: pixels.
            </summary>
      <returns>This is a constant value. Constant value: 32000.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.MAX_MULTIPLE_WH">
      <summary>
            This value indicates the maximum multiple of length and width. Units: None.
            </summary>
      <returns>This is a constant value. Constant value: 25.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.Parent">
      <summary>
            Get or set a reference to the parent object, which is the <see cref="T:BarcodePrinter_API.BarcodePrinter">BarcodePrinter</see> object.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid BarcodePrinter object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB.PrintOut">
      <summary>
            This function is used to output the commands in the emulator's temporary area to the connection. Then, when complete, the data in the temporary area will be cleared. These commands are converted from functions called by the user.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.SetUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil">PPLB_SetUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLB.PPLB.TextUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil">PPLB_TextUtil</see> object reference.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB.ToString">
      <summary>
            This function's return format [Emulation Name].
            </summary>
      <returns>[out] Return format [Emulation Name].</returns>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil">
      <summary>
            This class provides methods for barcode related programs of the PPLB emulator. This class is used in PPLB class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.#ctor(BarcodePrinter_API.Emulation.PPLB.PPLB)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintAztecCode(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte[])">
      <summary>
            This function is used to draw Aztec barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="magnification">[in] Magnification. Range: 1~55; default value: 3.</param>
      <param name="errCorrect">[in] Error correction level.
            <list type="bullet"><item>0 = Default error correction level.</item><item>01~99 = Error correction percentage (minimum).</item><item>101~104 = 1 to 4-layer compact symbol.</item><item>201~232 = 1 to 32-layer full-range symbol.</item><item>300 = A simple Aztec "Rune".</item></list></param>
      <param name="reverseImage">[in] Whether the graphics are reversed. 'true' means to reverse the graphics; 'false' means normal.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintDataMatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte[])">
      <summary>
            This function is used to draw Data Matrix barcode, and quality level only supports ECC 200.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="columns">[in] Number of columns of data to be used for coding. Range: 8~144; 0: means automatic; when in ECC 200, this value only support even value.</param>
      <param name="rows">[in] Number of rows of data to be used for coding. Range: 8~144; 0: means automatic; when in ECC 200, this value only support even value.</param>
      <param name="height">[in] Dimensional height of individual symbol elements. Range: 1~40; unit: pixels; default value: 5.</param>
      <param name="reverseImage">[in] Whether the graphics are reversed. 'true' means to reverse the graphics; 'false' means normal.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintMaxiCode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBMaxiCodeMode,System.Int32,System.Int32,System.String,System.Byte[])">
      <summary>
            This function is used to draw MaxiCode barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="mode">[in] MaxiCode mode. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBMaxiCodeMode" /> enum to set up.
            <list type="bullet"><item>Mode_2 = Structured carrier message: Numeric postal code (U.S.).</item><item>Mode_3 = Structured carrier message: Alphanumeric postal code (non-U.S.).</item></list></param>
      <param name="service">[in] Three digit class of service. Only valid in mode 2 and mode 3.</param>
      <param name="country">[in] Three digit country code. Only valid in mode 2 and mode 3.</param>
      <param name="zipcode">[in] Zip code. Only valid in mode 2 and mode 3.
            <list type="bullet"><item>mode 2: please input a nine-digit zip code (five-digit zip code + four-digit zip code extension), if no zip code extension, please input "0000".</item><item>mode 3: please enter a six-digit zip code.</item></list></param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintOneDBarcode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType,System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte[])">
      <summary>
            This function is used to draw a one-dimensional barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="type">[in] One-dimensional barcode types. Please refer to "type" in "One-dimensional barcode types"; Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType" /> enum to set up.</param>
      <param name="narrow">[in] Narrow bar width (also known as module width), the purpose is to magnify. Range: 1~10; unit: pixels.</param>
      <param name="wide">[in] Wide bar width. Range: wide/narrow = 2.0~3.0; please refer to "Wide bar to narrow bar width ratio" of "One-dimensional barcode types".</param>
      <param name="height">[in] Barcode height. Range: 1~32000; unit: pixels.</param>
      <param name="humanReadable">[in] Whether to print the human readable code. 'true' means to print;'false' means not to print.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintOneDBarcode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            This function is used to draw a one-dimensional barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="type">[in] One-dimensional barcode types. Please refer to "type" in "One-dimensional barcode types"; Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType" /> enum to set up.</param>
      <param name="narrow">[in] Narrow bar width (also known as module width), the purpose is to magnify. Range: 1~10; unit: pixels.</param>
      <param name="wide">[in] Wide bar width. Range: wide/narrow = 2.0~3.0; please refer to "Wide bar to narrow bar width ratio" of "One-dimensional barcode types".</param>
      <param name="height">[in] Barcode height. Range: 1~32000; unit: pixels.</param>
      <param name="humanReadable">[in] Whether to print the human readable code. 'true' means to print;'false' means not to print.</param>
      <param name="variableName">[in] 'Variable' name or 'Counter' name.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintPDF417(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,System.Int32,System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBPDF417CompressionMode,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte[])">
      <summary>
            This function is used to draw PDF417 barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="maxWidth">[in] The maximum print width. Range: 1~32000; unit: pixel.</param>
      <param name="maxHeight">[in] The maximum print height. Range: 1~32000; unit: pixel.</param>
      <param name="security">[in] Error correction level. Range: 0~8; 0 means error detection only, no correction.</param>
      <param name="compressionMode">[in] The data compression mode. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBPDF417CompressionMode" /> enum to set up.</param>
      <param name="narrow">[in] Narrow bar width (also known as module width), the purpose is to magnify. Range: 2~9; unit: pixel; default value: 6.</param>
      <param name="height">[in] The height of each row. Range: 4~99; unit: pixels.</param>
      <param name="columns">[in] Number of columns of data to be used for coding. Range: 1~30; 0: means automatic.</param>
      <param name="rows">[in] Number of rows of data to be used for coding. Range: 3~90; 0: means automatic.</param>
      <param name="isTruncate">[in] Truncate right column indicator and stop pattern. 'true' is to truncate; 'false' is not to truncate.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintQRCode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeModel,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect,System.Byte[])">
      <summary>
            This function is used to draw QR code.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="model">[in] QR code model. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeModel" /> enum to set up.</param>
      <param name="magnification">[in] Magnification. Range: 1~99; default value: 3.</param>
      <param name="errCorrect">[in] Error correction level. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect" /> enum to set up.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_BarcodeUtil.PrintRSS(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,BarcodePrinter_API.Emulation.PPLB.PPLBRSSType,System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte[])">
      <summary>
            This function is used to draw RSS (Reduced Space Symbology) barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="type">[in] Symbology type. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType" /> enum to set up.</param>
      <param name="magnification">[in] Magnification. Range: 1~10.</param>
      <param name="height">[in] Barcode height. Range: 1~32000; unit: pixels.</param>
      <param name="segment">
        <para>[in] Maximum number of data blocks can be contained in each row of bar code. The parameter is valid only when RSS Expanded bar code; invalid for other types of RSS barcode.</para>
        <para>Range: 2~22 (the value has to be even); default value: 22.</para>
        <para>When the value is 22, it is RSS Expanded; then the value is not 22, it is RSS Expanded Stacked.</para>
      </param>
      <param name="humanReadable">[in] Whether to print the human readable code. 'true' means to print;'false' means not to print.</param>
      <param name="data">
        <para>[in] Barcode information. Data type: byte array.</para>
        <para>Data format of one-dimensional barcode is [1D Data]. For example: "00614141999996".</para>
        <para>Data format of one/two-dimensional barcode is [1D Data]|[2D Composite Data], use character '|' to separate 1D/2D data. For example: "00614141999996|RSS test".</para>
      </param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil">
      <summary>
            This class provides the method of PPLB emulator 'Form' related procedures. This class is used in PPLB class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.#ctor(BarcodePrinter_API.Emulation.PPLB.PPLB)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.DeleteStoreForm(System.String)">
      <summary>
            This function is used to delete 'Form' stored in the printer.
            </summary>
      <param name="name">[in] The 'Form' name to delete. If the "*" string is used, all 'Form' will be deleted. Range: 1~8 English letters or numbers (alphanumeric) characters or asterisks (asterisk).</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.PrintStoreForm(System.String)">
      <summary>
            This function is used to execute (print) the 'Form' stored in the printer.
            </summary>
      <param name="name">[in] The 'Form' name to create. Range: 1~8 English letters or numbers (alphanumeric) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.SetCounter(System.String,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification,System.Int32,System.String)">
      <summary>
            This function is used to set the counter (Counter) data to be stored in 'Form' as text and barcode data fields.
            </summary>
      <param name="name">[in] The 'Counter' name to create. Format: "CX", 'C' is uppercase English characters, 'X' is a number 0~9.</param>
      <param name="maxNumber">[in] The longest data length. Range: 1~29; unit: byte.</param>
      <param name="fieldJustify">[in] Column alignment position. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification" /> enum to set up.</param>
      <param name="step">[in] The increment value each time.</param>
      <param name="prompt">[in] The prompt string. This is an ASCII string.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.SetDownloadVariable(System.Byte[])">
      <summary>
            This function is used to input variable or counter data.
            </summary>
      <param name="data">[in] The input string. Data type: byte array. Use newline ("\r\n") to separate different data.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.SetVariable(System.String,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification,System.String)">
      <summary>
            This function is used to set the variable (Variable) data to be stored in 'Form' as text and barcode data fields.
            </summary>
      <param name="name">[in] The 'Variable' name to create. Format: "VXX", 'V' is uppercase English characters, 'XX' is a number 00~99.</param>
      <param name="maxNumber">[in] The longest data length. Range: 1~99; unit: byte.</param>
      <param name="fieldJustify">[in] Column alignment position. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification" /> enum to set up.</param>
      <param name="prompt">[in] The prompt string. This is an ASCII string.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.StoreFormEnd">
      <summary>
            This function is used to end the 'Form' in use, and this function should be used in pair with <see cref="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.StoreFormStart(System.String)" />.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.StoreFormStart(System.String)">
      <summary>
            This function is used to create and start a 'Form', and this function should be used in pair with <see cref="M:BarcodePrinter_API.Emulation.PPLB.PPLB_FormUtil.StoreFormStart(System.String)" />.
            </summary>
      <param name="name">[in] The 'Form' name to create. Range: 1~8 English letters or numbers (alphanumeric) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil">
      <summary>
            This class provides methods for drawing related programs of the PPLB emulator. This class is used in PPLB class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.#ctor(BarcodePrinter_API.Emulation.PPLB.PPLB)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.DeleteStoreGraphic(System.String)">
      <summary>
            This function is used to delete image objects stored in the printer.
            </summary>
      <param name="imagename">[in] The name of the image object to delete. If the "*" string is used, all image objects will be deleted. Range: 1~8 English letters or numbers (alphanumeric) characters or asterisks (asterisk).</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.PrintBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            This function is used to draw a box.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="width">[in] Line width. Range: 1~32000; unit: pixels.</param>
      <param name="height">[in] Line length. Range: 1~32000; unit: pixels.</param>
      <param name="thickness">[in] Line thickness. Range: 1~32000; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.PrintGraphic(System.Int32,System.Int32,System.Drawing.Bitmap)">
      <summary>
            This function is used to print the graph directly.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="bitmap">[in] The graphic object to convert or download, it is a <see cref="T:System.Drawing.Bitmap" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.PrintGraphic(System.Int32,System.Int32,System.String)">
      <summary>
            This function is used to print the graphic file directly.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="filePath">[in] The graphic filename to convert or download, either an absolute (recommended) path or a relative path. Data type: Unicode; supported formats: BMP, GIF, EXIG, JPG, PNG and TIFF.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.PrintLine(System.Int32,System.Int32,System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBDraw)">
      <summary>
            This function is used to draw a line.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="width">[in] Line width. Range: 1~32000; unit: pixels.</param>
      <param name="height">[in] Line length. Range: 1~32000; unit: pixels.</param>
      <param name="mode">[in] The drawing mode. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBDraw" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.PrintStoreGraphic(System.Int32,System.Int32,System.String)">
      <summary>
            This function is used to specify a graphic name stored in the printer and print it.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="imagename">[in] The graphic name to draw. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.StoreGraphic(System.Drawing.Bitmap,System.String)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="bitmap">[in] The graphic object to convert or download, it is a <see cref="T:System.Drawing.Bitmap" /> object reference.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.StoreGraphic(System.Drawing.Bitmap,System.String,System.Int32,System.Int32)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="bitmap">[in] The graphic object to convert or download, it is a <see cref="T:System.Drawing.Bitmap" /> object reference.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="width">[in] The width of the graphic. Range: 1~32000; unit: pixel.</param>
      <param name="height">[in] The length of the graphic. Range: 1~32000; unit: pixel.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.StoreGraphic(System.String,System.String)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="filePath">[in] The graphic filename to convert or download, either an absolute (recommended) path or a relative path. Data type: Unicode; supported formats: BMP, GIF, EXIG, JPG, PNG and TIFF.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_GraphicsUtil.StoreGraphic(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="filePath">[in] The graphic filename to convert or download, either an absolute (recommended) path or a relative path. Data type: Unicode; supported formats: BMP, GIF, EXIG, JPG, PNG and TIFF.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="width">[in] The width of the graphic. Range: 1~32000; unit: pixel.</param>
      <param name="height">[in] The length of the graphic. Range: 1~32000; unit: pixel.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil">
      <summary>
            This class provides the method of PPLB emulator printer output/input related procedures. This class is used in PPLB class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.#ctor(BarcodePrinter_API.Emulation.PPLB.PPLB)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.AppendData(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to append commands and data bytes edited by the user to the end of the buffer.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.AppendData(System.String)">
      <summary>
            This function is used to append commands and data bytes edited by the user to the end of the buffer.
            </summary>
      <param name="str">[in] The data to be written into the connection. Data type: Unicode, then the data will be output through the encoding set in BarcodePrinter.SetEncoding().</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.AppendFile(System.String)">
      <summary>
            This function is used to append file data edited by the user to the end of the buffer.
            </summary>
      <param name="filePath">[in] This is a file name, can be either absolute (recommend) path or relative path. Data type: Unicode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.PrintOut">
      <summary>
            This function is used to output commands store the buffer to the connection. Then, upon completion, data in the buffer will be cleared. These commands come from the user calls the function conversion come.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.ToArray">
      <summary>
            This function is used to return commands in the temporary storage area.
            </summary>
      <returns>[out] Return the byte array.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_IOUtil.ToArray(System.Boolean)">
      <summary>
            This function is used to return commands in the temporary storage area.
            </summary>
      <param name="isClear">[in] After returning the byte array, whether to clear the commands in the temporary storage area.</param>
      <returns>[out] Return the byte array.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil">
      <summary>
            This class provides methods for setting programs related to the printer parameters of the PPLB emulator. This class is used in PPLB class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.#ctor(BarcodePrinter_API.Emulation.PPLB.PPLB)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetBackfeed(System.Boolean,System.Int32)">
      <summary>
            This function is used to set whether the label is backfeed and the backfeed distance before printing.
            </summary>
      <param name="isEnable">[in] Whether the label is backfeed.'true' means to backfeed; 'false' means not to backfeed; the default value is 'false'.</param>
      <param name="offset">[in] The offset value of the feed. Range: -30~30; unit: pixel. Normally, when isEnable is 'true', the offset is set to 0 to be the correct tearing position. When a offset occurs, this value is used to make fine adjustments.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetClearImageBuffer">
      <summary>
            This function is used to clear the image temporary area. If you do not want to leave the print content of the previous label, please use this function.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetDarkness(System.Int32)">
      <summary>
            This function is used to set the printing temperature of the printer head.
            </summary>
      <param name="darkness">[in] Set the temperature of printer head. Range: 0~15.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetHardwareOption(BarcodePrinter_API.Emulation.PPLB.PPLBMediaType,BarcodePrinter_API.Emulation.PPLB.PPLBPrintMode,System.Int32)">
      <summary>
            This function is used to set the printer's hardware settings, including: the media type, the action mode of the label after printing.
            </summary>
      <param name="mediaType">[in] Media type. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBMediaType" /> enum to set up.</param>
      <param name="printMode">[in] The mode of action taken toward the label after printing. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBPrintMode" /> enum to set up.</param>
      <param name="cutValue">[in] The number of cuts. Range: 1~255.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetHomePosition(System.Int32,System.Int32)">
      <summary>
            This function is used to set up the label's origin. Default coordinate is at the lower right corner (0,0).
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetLabelLength(BarcodePrinter_API.Emulation.PPLB.PPLBMediaTrack,System.Int32,System.Int32)">
      <summary>
            This function is used to set the detection mode of the label and the label length. This parameter is required for continuous label.
            </summary>
      <param name="type">[in] Media detection mode. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBMediaTrack" /> enum to set up.</param>
      <param name="length">[in] To set the media length. Range: 1~32000; unit: pixels.</param>
      <param name="gap">[in] To set the gap length. Range: 16~600; unit: pixel.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetMediaCalibration">
      <summary>
            This function is used to allow the printer to do the label length detection and calibration.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetOrientation(System.Boolean)">
      <summary>
            This function is used to set the printing direction.
            </summary>
      <param name="isInvert">[in] Whether to print in the inverted mode.'true' is the inverted mode;'false' is the normal mode; the default value is'false'.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetPrintOut(System.Int32,System.Int32)">
      <summary>
            This function is used to output the print command and the number of prints to a temporary area. This is equivalent to the end of a label format content. So, after the function call been completed, there will be the beginning of a new label format content.
            </summary>
      <param name="numberOfLabelSet">[in] The number of label (number of serial label). Range: 1~65535.</param>
      <param name="numberOfCopyOfEachLabel">[in] The number of copies of each label (the number of printed copies of the same label). Range: 1~65535.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetPrintRate(System.Int32)">
      <summary>
            This function is used to set the printing speed.
            </summary>
      <param name="printSpeed">[in] Print speed. Range: 1~8; unit: IPS.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetPrintWidth(System.Int32)">
      <summary>
            This function is used to set the printing range, equivalent to the media width.
            </summary>
      <param name="width">[in] To set the mdeia width. Range: 2~width of printer; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetReset">
      <summary>
            This function is to reboot the system and clear all data stored in the buffer and memory.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetSerial(System.Int32,BarcodePrinter_API.Comm.SerialParity,System.Int32,BarcodePrinter_API.Comm.SerialStopBits)">
      <summary>
            This function is used to set parameters of the printer's serial port (RS-232).
            </summary>
      <param name="baudRate">[in] Baud rate. Supports: 2400, 4800, 9600, 19200, 38400, 57600, 115200.</param>
      <param name="parity">[in] Parity-checking bits. Use <see cref="T:BarcodePrinter_API.Comm.SerialParity" /> enum to set up, the same as <see cref="T:System.IO.Ports.Parity" /> enum; support: SerialParity.None, SerialParity.Odd, SerialParity.Even.</param>
      <param name="dataBits">[in] Data bits value. Supports: 7, 8.</param>
      <param name="stopBits">[in] The stop bits value. Use <see cref="T:BarcodePrinter_API.Comm.SerialStopBits" /> enum to set up, the same as <see cref="T:System.IO.Ports.StopBits" /> enum; support: SerialStopBits.None, SerialStopBits.One.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_SetUtil.SetStorage(BarcodePrinter_API.Emulation.PPLB.PPLBStorage)">
      <summary>
            This function is used to set the location of the object's storage device, including form, garphic, font. And this setting will be invalid after shutdown.
            </summary>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBStorage" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil">
      <summary>
            This class provides methods for text-related programs of the PPLB emulator. This class is used in PPLB class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil.#ctor(BarcodePrinter_API.Emulation.PPLB.PPLB)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLB" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLB object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil.PrintText(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,BarcodePrinter_API.Emulation.PPLB.PPLBFont,System.Int32,System.Int32,System.Boolean,System.Byte[])">
      <summary>
            This function is used to print the string and specify the internal font or soft font inside the printer for printing.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="font">[in] Select font. The two types are internal font and soft font; Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBFont" /> enum to set up.</param>
      <param name="widthMultiple">[in] The multiple of the character width. Range: 1~25 times.</param>
      <param name="heightMultiple">[in] The multiple of the character length. Range: 1~25 times.</param>
      <param name="reverseImage">[in] Whether the graphics are reversed. 'true' means to reverse the graphics; 'false' means normal.</param>
      <param name="data">[in] String to print. Data type: byte array.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil.PrintText(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,BarcodePrinter_API.Emulation.PPLB.PPLBFont,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            This function is used to print the string and specify the internal font or soft font inside the printer for printing.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="font">[in] Select font. The two types are internal font and soft font; Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBFont" /> enum to set up.</param>
      <param name="widthMultiple">[in] The multiple of the character width. Range: 1~25 times.</param>
      <param name="heightMultiple">[in] The multiple of the character length. Range: 1~25 times.</param>
      <param name="reverseImage">[in] Whether the graphics are reversed. 'true' means to reverse the graphics; 'false' means normal.</param>
      <param name="variableName">[in] 'Variable' name or 'Counter' name.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil.PrintTextGraphic(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,System.Int32)">
      <summary>
            This function is used to directly print text graphics converted using system fonts.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="data">[in] The string to convert into graphic file, cannot be empty string. Data type: Unicode.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="width">[in] User-defined width. Range: &gt;= 0; 0 means the system automatically calculates the width.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil.StoreTextGraphic(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
      <summary>
            This function is used to download the text graphic converted from the system font, and store the graphic into the printer.
            </summary>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="data">[in] The string to convert into graphic file, cannot be empty string. Data type: Unicode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLB.PPLB_TextUtil.StoreTextGraphic(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,BarcodePrinter_API.Emulation.PPLB.PPLBOrient,System.Int32)">
      <summary>
            This function is used to download the text graphic converted from the system font, and store the graphic into the printer.
            </summary>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="data">[in] The string to convert into graphic file, cannot be empty string. Data type: Unicode.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient" /> enum to set up.</param>
      <param name="width">[in] User-defined width. Range: &gt;= 0; 0 means the system automatically calculates the width.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType">
      <summary>
            This enumeration is used to set the one-dimensional barcode type.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_128_UCC">
      <summary>
            Code 128 UCC Serial Shipping Container Code.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_128_Auto_Mode">
      <summary>
            Code 128 auto A, B, C modes.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_128_Mode_A">
      <summary>
            Code 128 mode A.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_128_Mode_B">
      <summary>
            Code 128 mode B.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_128_Mode_C">
      <summary>
            Code 128 mode C.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UCC_EAN_128">
      <summary>
            UCC/EAN 128.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Interleaved_2_of_5">
      <summary>
            Interleaved 2 of 5.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Interleaved_2_of_5_With_Mod_10_Check_Digit">
      <summary>
            Interleaved 2 of 5 with mod 10 check digit.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Interleaved_2_of_5_With_Human_Readable_Check_Digit">
      <summary>
            Interleaved 2 of 5 with human readable check digit.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.German_Post_Code">
      <summary>
            German Post Code.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Matrix_2_of_5">
      <summary>
            Matrix 2 of 5.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_Interleaved_2_of_5">
      <summary>
            UPC Interleaved 2 of 5.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_39">
      <summary>
            Code 39 std. or extended.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_39_With_Check_Digit">
      <summary>
            Code 39 with check digit.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Code_93">
      <summary>
            Code 93.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.EAN_13">
      <summary>
            EAN-13.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.EAN_13_2_Digit_Add_on">
      <summary>
            EAN-13 2 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.EAN_13_5_Digit_Add_on">
      <summary>
            EAN-13 5 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.EAN_8">
      <summary>
            EAN-8.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.EAN_8_2_Digit_Add_on">
      <summary>
            EAN-8 2 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.EAN_8_5_Digit_Add_on">
      <summary>
            EAN-8 5 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Codabar">
      <summary>
            Codabar.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.Postnet">
      <summary>
            Postnet 5, 9, 11 and 13 digit.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_A">
      <summary>
            UPC-A.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_A_2_Digit_Add_on">
      <summary>
            UPC-A 2 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_A_5_Digit_Add_on">
      <summary>
            UPC-A 5 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_E">
      <summary>
            UPC-E.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_E_2_Digit_Add_on">
      <summary>
            UPC-E 2 digit add-on.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBBarCodeType.UPC_E_5_Digit_Add_on">
      <summary>
            UPC-E 5 digit add-on.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBDraw">
      <summary>
            This enumeration is used to set the color when coloring.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBDraw.Draw_Black">
      <summary>
            Black.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBDraw.Draw_XOR">
      <summary>
            Exclusive OR.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBDraw.Draw_White">
      <summary>
            White.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification">
      <summary>
            This enumeration is used to set the alignment of data fields in Variable and Counter data.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification.Left">
      <summary>
            Left.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification.Right">
      <summary>
            Right.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification.Center">
      <summary>
            Center.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFieldJustification.No_Justification">
      <summary>
            Not aligned.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBFont">
      <summary>
            This enumeration is used to set the printer's internal fonts and soft fonts.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_1">
      <summary>
            Bitmap font 1, (203 dpi Width,Height) = (8,12), (300 dpi Width,Height) = (12,20).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_2">
      <summary>
            Bitmap font 2, (203 dpi Width,Height) = (10,16), (300 dpi Width,Height) = (16,28).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_3">
      <summary>
            Bitmap font 3, (203 dpi Width,Height) = (12,20), (300 dpi Width,Height) = (20,36).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_4">
      <summary>
            Bitmap font 4, (203 dpi Width,Height) = (14,24), (300 dpi Width,Height) = (24,44).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_5">
      <summary>
            Bitmap font 5, (203 dpi Width,Height) = (32,48), (300 dpi Width,Height) = (48,80).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_6">
      <summary>
            Bitmap font 6, (203 dpi Width,Height) = (14,19), (300 dpi Width,Height) = (14,19).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_7">
      <summary>
            Bitmap font 7, (203 dpi Width,Height) = (14,19), (300 dpi Width,Height) = (14,19).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_a">
      <summary>
            Soft font a.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_b">
      <summary>
            Soft font b.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_c">
      <summary>
            Soft font c.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_d">
      <summary>
            Soft font d.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_e">
      <summary>
            Soft font e.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_f">
      <summary>
            Soft font f.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_g">
      <summary>
            Soft font g.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_h">
      <summary>
            Soft font h.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_i">
      <summary>
            Soft font i.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_j">
      <summary>
            Soft font j.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_k">
      <summary>
            Soft font k.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_l">
      <summary>
            Soft font l.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_m">
      <summary>
            Soft font m.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_n">
      <summary>
            Soft font n.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_o">
      <summary>
            Soft font o.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_p">
      <summary>
            Soft font p.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_q">
      <summary>
            Soft font q.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_r">
      <summary>
            Soft font r.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_s">
      <summary>
            Soft font s.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_t">
      <summary>
            Soft font t.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_u">
      <summary>
            Soft font u.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_v">
      <summary>
            Soft font v.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_w">
      <summary>
            Soft font w.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_x">
      <summary>
            Soft font x.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_y">
      <summary>
            Soft font y.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBFont.Font_z">
      <summary>
            Soft font z.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBMaxiCodeMode">
      <summary>
            This enumeration is used to set the MaxiCode mode.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMaxiCodeMode.Mode_2">
      <summary>
            Structured carrier message: Numeric postal code (U.S.).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMaxiCodeMode.Mode_3">
      <summary>
            Structured carrier message: Alphanumeric postal code (non-U.S.).
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBMediaTrack">
      <summary>
            This enumeration is used to set the media detection mode of the printer.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMediaTrack.Continuous_Media_Mode">
      <summary>
            Continuous label mode.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMediaTrack.Gap_Mode">
      <summary>
            Gap mode.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMediaTrack.Black_Line_Mode">
      <summary>
            Black line mode.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBMediaType">
      <summary>
            This enumeration is used to set the media type.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMediaType.Thermal_Transfer_Media">
      <summary>
            Thermal transfer.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBMediaType.Direct_Thermal_Media">
      <summary>
            Direct thermal.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBOrient">
      <summary>
            This enumeration is used to set the rotation angle and direction of the object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBOrient.Clockwise_0_Degrees">
      <summary>
            Clockwise 0 Degrees.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBOrient.Clockwise_90_Degrees">
      <summary>
            Clockwise 90 Degrees.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBOrient.Clockwise_180_Degrees">
      <summary>
            Clockwise 180 Degrees.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBOrient.Clockwise_270_Degrees">
      <summary>
            Clockwise 270 Degrees.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBPDF417CompressionMode">
      <summary>
            This enumeration is used to set the data compression mode for PDF417.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBPDF417CompressionMode.Auto_Encoding">
      <summary>
            Automatic encoding.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBPDF417CompressionMode.Binary_Mode">
      <summary>
            Binary mode.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBPrintMode">
      <summary>
            This enumeration is used to set the action mode for label paper after printing.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBPrintMode.Tear_Off">
      <summary>
            Tear off.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBPrintMode.Peel_Off">
      <summary>
            Peel off.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBPrintMode.Cutter">
      <summary>
            Cutter.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect">
      <summary>
            This enumeration is used to set the error correction level of QR Code.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect.High_Density">
      <summary>
            High Density, recovery 7%.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect.Standard">
      <summary>
            Standard, recovery 15%.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect.High_Reliability">
      <summary>
            High Reliability, recovery 25%.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeErrCorrect.Ultra_High_Reliability">
      <summary>
            Ultra High Reliability, recovery 30%.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeModel">
      <summary>
            This enumeration is used to set the QR Code model.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeModel.Model_1">
      <summary>
            Original.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBQRCodeModel.Model_2">
      <summary>
            Enhanced Recommended.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType">
      <summary>
            This enumeration is used to set the symbology type of RSS (GS1 DataBar).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType.RSS_14">
      <summary>
            RSS-14 (GS1 DataBar Omnidirectional).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType.RSS_Truncated">
      <summary>
            RSS Truncated (GS1 DataBar Truncated).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType.RSS_Stacked">
      <summary>
            RSS Stacked (GS1 DataBar Stacked).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType.RSS_Stacked_Omnidirectional">
      <summary>
            RSS Stacked Omnidirectional (GS1 DataBar Stacked Omnidirectional).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType.RSS_Limited">
      <summary>
            RSS Limited (GS1 DataBar Limited).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBRSSType.RSS_Expanded">
      <summary>
            RSS Expanded (GS1 DataBar Expanded).
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLB.PPLBStorage">
      <summary>
            This enumeration is used to set the storage device for the object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBStorage.Dram">
      <summary>
            DRAM.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLB.PPLBStorage.Flash">
      <summary>
            Flash Memory.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ">
      <summary>
            This class is the subject of PPLZ emulator, including all different functions of PPLZ emulator. This class needs to be instantiated before it can be used.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ.#ctor">
      <summary>
            This is the constructor, which will automatically create the objects needed for this emulation.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, not enough memory.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.BarcodeUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil">PPLZ_BarcodeUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.FormatUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil">PPLZ_FormatUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.GraphicsUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil">PPLZ_GraphicsUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.IOUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil">PPLZ_IOUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.MAX_LABEL_WH">
      <summary>
            This value represents the value of maximum length and width of the label. Unit: pixels.
            </summary>
      <returns>This is a constant value. Constant value: 32000.</returns>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.Parent">
      <summary>
            Get or set a reference to the parent object, which is the <see cref="T:BarcodePrinter_API.BarcodePrinter">BarcodePrinter</see> object.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid BarcodePrinter object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ.PrintOut">
      <summary>
            This function is used to output the commands in the emulator's temporary area to the connection. Then, when complete, the data in the temporary area will be cleared. These commands are converted from functions called by the user.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.SetUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil">PPLZ_SetUtil</see> object reference.
            </summary>
    </member>
    <member name="P:BarcodePrinter_API.Emulation.PPLZ.PPLZ.TextUtil">
      <summary>
            Get a reference to the <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil">PPLZ_TextUtil</see> object reference.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ.ToString">
      <summary>
            This function's return format [Emulation Name].
            </summary>
      <returns>[out] Return format [Emulation Name].</returns>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil">
      <summary>
            This class provides methods for barcode related programs of the PPLZ emulator. This class is used in PPLZ class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.#ctor(BarcodePrinter_API.Emulation.PPLZ.PPLZ)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintAztecCode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>
            This function is used to draw Aztec barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="magnification">[in] Magnification. Range: 1~10.</param>
      <param name="errCorrect">[in] Error correction level.
            <list type="bullet"><item>0 = Default error correction level.</item><item>01~99 = Error correction percentage (minimum).</item><item>101~104 = 1 to 4-layer compact symbol.</item><item>201~232 = 1 to 32-layer full-range symbol.</item><item>300 = A simple Aztec "Rune".</item></list></param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintDataMatrix(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>
            This function is used to draw Data Matrix barcode, and quality level only supports ECC 200.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="height">[in] Dimensional height of individual symbol elements. Range: 1~9999; unit: pixels.</param>
      <param name="columns">[in] Number of columns of data to be used for coding. Range: 9~49; 0: means automatic; when in ECC 200, this value only support even value.</param>
      <param name="rows">[in] Number of rows of data to be used for coding. Range: 9~49; 0: means automatic; when in ECC 200, this value only support even value.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintMaxiCode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZMaxiCodeMode,System.Int32,System.Int32,System.String,System.Byte[],System.Int32)">
      <summary>
            This function is used to draw MaxiCode barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="mode">[in] MaxiCode mode. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZMaxiCodeMode" /> enum to set up.
            <list type="bullet"><item>Mode_2 = Structured carrier message: Numeric postal code (U.S.).</item><item>Mode_3 = Structured carrier message: Alphanumeric postal code (non-U.S.).</item></list></param>
      <param name="service">[in] Three digit class of service. Only valid in mode 2 and mode 3.</param>
      <param name="country">[in] Three digit country code. Only valid in mode 2 and mode 3.</param>
      <param name="zipcode">[in] Zip code. Only valid in mode 2 and mode 3.
            <list type="bullet"><item>mode 2: please input a nine-digit zip code (five-digit zip code + four-digit zip code extension), if no zip code extension, please input "0000".</item><item>mode 3: please enter a six-digit zip code.</item></list></param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintMicroPDF417(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>
            This function is used to draw MicroPDF417 barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="height">[in] The height of each row. Range: 1~9999; unit: pixels.</param>
      <param name="mode">[in] MicroPDF417 Mode. Range: 0~33; default value: 0; please refer to "MicroPDF417 Mode".</param>
      <param name="narrow">[in] Narrow bar width (also known as module width), the purpose is to magnify. Range: 1~10; unit: pixels.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintOneDBarcode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32,System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType,System.Int32,System.Byte[],System.Char,System.Char,System.Char,System.Char,System.Char)">
      <summary>
            This function is used to draw a one-dimensional barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="narrow">[in] Narrow bar width (also known as module width), the purpose is to magnify. Range: 1~10; unit: pixels.</param>
      <param name="wide">[in] Wide bar width. Range: wide/narrow = 2.0~3.0; please refer to "Wide bar to narrow bar width ratio" of "One-dimensional barcode types".</param>
      <param name="height">[in] Barcode height. When 'type' = 'U','5', range: 1~9999; else, range: 1~32000; unit: pixels.</param>
      <param name="type">[in] One-dimensional barcode types. Please refer to "type" in "One-dimensional barcode types"; Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType" /> enum to set up.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="p1">[in] Barcode printing condition. Please refer to "parameter" in "One-dimensional barcode types".</param>
      <param name="p2">[in] Barcode printing condition. Please refer to "parameter" in "One-dimensional barcode types".</param>
      <param name="p3">[in] Barcode printing condition. Please refer to "parameter" in "One-dimensional barcode types".</param>
      <param name="p4">[in] Barcode printing condition. Please refer to "parameter" in "One-dimensional barcode types".</param>
      <param name="p5">[in] Barcode printing condition. Please refer to "parameter" in "One-dimensional barcode types".</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintPDF417(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Byte[],System.Int32)">
      <summary>
            This function is used to draw PDF417 barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="height">[in] The height of each row. Range: 1~9999; unit: pixels.</param>
      <param name="security">[in] Error correction level. Range: 0~8; 0 means error detection only, no correction.</param>
      <param name="columns">[in] Number of columns of data to be used for coding. Range: 1~30; 0: means automatic.</param>
      <param name="rows">[in] Number of rows of data to be used for coding. Range: 3~90; 0: means automatic.</param>
      <param name="isTruncate">[in] Truncate right column indicator and stop pattern. 'true' is to truncate; 'false' is not to truncate.</param>
      <param name="narrow">[in] Narrow bar width (also known as module width), the purpose is to magnify. Range: 1~10; unit: pixels.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintQRCode(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeModel,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect,System.Byte[],System.Int32)">
      <summary>
            This function is used to draw QR code.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="model">[in] QR code model. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeModel" /> enum to set up.</param>
      <param name="magnification">[in] Magnification. Range: 1~10.</param>
      <param name="errCorrect">[in] Error correction level. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect" /> enum to set up.</param>
      <param name="data">[in] Barcode information. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_BarcodeUtil.PrintRSS(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
            This function is used to draw RSS (Reduced Space Symbology) barcode.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="type">[in] Symbology type. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType" /> enum to set up.</param>
      <param name="magnification">[in] Magnification. Range: 1~10.</param>
      <param name="height">[in] Barcode height. Range: 1~32000; unit: pixels; 0 is the barcode standard value; please refer to "Standard minimum height of symbology type" of "Symbology types of RSS (GS1 DataBar)".</param>
      <param name="segment">
        <para>[in] Maximum number of data blocks can be contained in each row of bar code. The parameter is valid only when RSS Expanded bar code; invalid for other types of RSS barcode.</para>
        <para>Range: 2~22 (the value has to be even); default value: 22.</para>
        <para>When the value is 22, it is RSS Expanded; then the value is not 22, it is RSS Expanded Stacked.</para>
      </param>
      <param name="data">
        <para>[in] Barcode information. Data type: byte array.</para>
        <para>Data format of one-dimensional barcode is [1D Data]. For example: "00614141999996".</para>
        <para>Data format of one/two-dimensional barcode is [1D Data]|[2D Composite Data], use character '|' to separate 1D/2D data. For example: "00614141999996|RSS test".</para>
      </param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil">
      <summary>
            This class provides the method of PPLZ emulator 'Format' related procedures. This class is used in PPLZ class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.#ctor(BarcodePrinter_API.Emulation.PPLZ.PPLZ)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.DeleteStoreFormat(BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)">
      <summary>
            This function is used to delete the 'Format' stored in the printer.
            </summary>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="name">[in] The 'Format' name to delete. If the "*" string is used, all 'Format' will be deleted. Range: 1~8 English letters or numbers (alphanumeric) characters or asterisks (asterisk).</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.PrintStoreFormat(BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)">
      <summary>
            This function is used to execute (print) the 'Format' stored in the printer.
            </summary>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="name">[in] The 'Format' name to create. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.StoreFormatEnd">
      <summary>
            This function is used to end the 'Format' in use, and this function should be used in pair with <see cref="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.StoreFormatStart(BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)" />.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.StoreFormatStart(BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)">
      <summary>
            This function is used to create and start a 'Format', and this function should be used in pair with <see cref="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_FormatUtil.StoreFormatEnd" />.
            </summary>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="name">[in] The 'Format' name to create. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil">
      <summary>
            This class provides methods for drawing related programs of the PPLZ emulator. This class is used in PPLZ class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.#ctor(BarcodePrinter_API.Emulation.PPLZ.PPLZ)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.DeleteStoreGraphic(BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)">
      <summary>
            This function is used to delete image objects stored in the printer.
            </summary>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The name of the image object to delete. If the "*" string is used, all image objects will be deleted. Range: 1~8 English letters or numbers (alphanumeric) characters or asterisks (asterisk).</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.PrintBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            This function is used to draw a box.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="width">[in] Line width. Range: 1~32000; unit: pixels.</param>
      <param name="height">[in] Line length. Range: 1~32000; unit: pixels.</param>
      <param name="thickness">[in] Line thickness. Range: 1~32000; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.PrintGraphic(System.Int32,System.Int32,System.Drawing.Bitmap,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat)">
      <summary>
            This function is used to print the graph directly.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="bitmap">[in] The graphic object to print, it is a <see cref="T:System.Drawing.Bitmap" /> object reference.</param>
      <param name="formatType">[in] The data format of the graphic object to print. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.PrintGraphic(System.Int32,System.Int32,System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat)">
      <summary>
            This function is used to print the graphic file directly.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="filePath">[in] The graphic filename to print, either an absolute (recommended) path or a relative path. Data type: Unicode; supported formats: BMP, GIF, EXIG, JPG, PNG and TIFF.</param>
      <param name="formatType">[in] The data format of the graphic object to print. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.PrintLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            This function is used to draw a line.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="width">[in] Line width. Range: 1~32000; unit: pixels.</param>
      <param name="height">[in] Line length. Range: 1~32000; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.PrintStoreGraphic(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String,System.Int32,System.Int32)">
      <summary>
            This function is used to specify a graphic name stored in the printer and print it.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to draw. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="horizontal">[in] Horizontal magnification. Range: 1~10; default value: 1.</param>
      <param name="vertical">[in] Vertical magnification. Range: 1~10; default value: 1.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.StoreGraphic(System.Drawing.Bitmap,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="bitmap">[in] The graphic object to convert or download, it is a <see cref="T:System.Drawing.Bitmap" /> object reference.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.StoreGraphic(System.Drawing.Bitmap,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="bitmap">[in] The graphic object to convert or download, it is a <see cref="T:System.Drawing.Bitmap" /> object reference.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="formatType">[in] The data format of the stored object. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.StoreGraphic(System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="filePath">[in] The graphic filename to convert or download, either an absolute (recommended) path or a relative path. Data type: Unicode; supported formats: BMP, GIF, EXIG, JPG, PNG and TIFF.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_GraphicsUtil.StoreGraphic(System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat)">
      <summary>
            This function is used to following the name and location specified by the user, then store the graphic data to the printer.
            </summary>
      <param name="filePath">[in] The graphic filename to convert or download, either an absolute (recommended) path or a relative path. Data type: Unicode; supported formats: BMP, GIF, EXIG, JPG, PNG and TIFF.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="formatType">[in] The data format of the stored object. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil">
      <summary>
            This class provides the method of PPLZ emulator printer output/input related procedures. This class is used in PPLZ class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.#ctor(BarcodePrinter_API.Emulation.PPLZ.PPLZ)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.AppendData(System.Byte[],System.Int32,System.Int32)">
      <summary>
            This function is used to append commands and data bytes edited by the user to the end of the buffer.
            </summary>
      <param name="array">[in] The data to be written into the connection. Data type: byte array.</param>
      <param name="offset">[in] The zero-based byte offset from 'array', used to start copying bytes into the current connection.</param>
      <param name="count">[in] Number of bytes to be written into the current connection.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.AppendData(System.String)">
      <summary>
            This function is used to append commands and data bytes edited by the user to the end of the buffer.
            </summary>
      <param name="str">[in] The data to be written into the connection. Data type: Unicode, then the data will be output through the encoding set in BarcodePrinter.SetEncoding().</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.AppendFile(System.String)">
      <summary>
            This function is used to append file data edited by the user to the end of the buffer.
            </summary>
      <param name="filePath">[in] This is a file name, can be either absolute (recommend) path or relative path. Data type: Unicode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or read file data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.PrintOut">
      <summary>
            This function is used to output commands store the buffer to the connection. Then, upon completion, data in the buffer will be cleared. These commands come from the user calls the function conversion come.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterConnectionException">
            I/O error occurred.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            Failed to write data into connection.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterWriteTimeoutException">
            Write data timeout.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.ToArray">
      <summary>
            This function is used to return commands in the temporary storage area.
            </summary>
      <returns>[out] Return the byte array.</returns>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_IOUtil.ToArray(System.Boolean)">
      <summary>
            This function is used to return commands in the temporary storage area.
            </summary>
      <param name="isClear">[in] After returning the byte array, whether to clear the commands in the temporary storage area.</param>
      <returns>[out] Return the byte array.</returns>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil">
      <summary>
            This class provides methods for setting programs related to the printer parameters of the PPLZ emulator. This class is used in PPLZ class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.#ctor(BarcodePrinter_API.Emulation.PPLZ.PPLZ)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetBackfeed(System.Int32)">
      <summary>
            This function is used to set the backfeed distance of the label before printing.
            </summary>
      <param name="length">[in] Feed length. Range: -255~255; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetDarkness(System.Int32)">
      <summary>
            This function is used to set the printing temperature of the printer head.
            </summary>
      <param name="darkness">[in] Set the temperature of printer head. Range: 0~30.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetHexIndicator(System.Char)">
      <summary>
            This function is used to set the hexadecimal indicator. If hexadecimal data is used in the output data, please be sure to use this function, otherwise the data judgment will be unexpected.
            </summary>
      <param name="indicator">[in] Hexadecimal indicator. Range: 0x20~0x7F; 0x00 is default value '_'.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetHomePosition(System.Int32,System.Int32)">
      <summary>
            This function is used to set up the label's origin. Default coordinate is at the top left corner (0,0).
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetLabelLength(System.Int32)">
      <summary>
            This function is used to set the media length, and it is required when continuous media is used.
            </summary>
      <param name="length">[in] To set the media length. Range: 1~32000; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetMediaCalibration">
      <summary>
            This function is used to allow the printer to do the label length detection and calibration.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetMediaTrack(BarcodePrinter_API.Emulation.PPLZ.PPLZMediaTrack)">
      <summary>
            This function is used to set the media detection mode.
            </summary>
      <param name="type">[in] Media detection mode. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaTrack" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetMediaType(BarcodePrinter_API.Emulation.PPLZ.PPLZMediaType)">
      <summary>
            This function is used to set the mdeia type for printing.
            </summary>
      <param name="type">[in] Media type. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaType" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetMirror(System.Boolean)">
      <summary>
            This function is used to enable or disable mirror mode.
            </summary>
      <param name="isMirror">[in] Whether to print in the mirror mode. 'true' is the mirror mode; 'false' is the normal mode; default value is 'false'.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetOrientation(System.Boolean)">
      <summary>
            This function is used to set the printing direction.
            </summary>
      <param name="isInvert">[in] Whether to print in the inverted mode.'true' is the inverted mode;'false' is the normal mode; the default value is'false'.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetPrintMode(BarcodePrinter_API.Emulation.PPLZ.PPLZPrintMode)">
      <summary>
            This function is used to set actions to be taken toward the label after printing.
            </summary>
      <param name="mode">[in] The mode of action taken toward the label after printing. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZPrintMode" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetPrintOut(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            This function is used to output the print command and the number of prints to a temporary area. This is equivalent to the end of a label format content. So, after the function call been completed, there will be the beginning of a new label format content.
            </summary>
      <param name="totalLabel">[in] Total number of pages to be printed. The value should be "copies of label" * "number of serialization"; range: &gt;=1.</param>
      <param name="pauseCutValue">[in] The number of label to pause and cut. Range: &gt;= 0.</param>
      <param name="copies">[in] The number of copies to be printed for every serial value. Range: &gt;= 0.</param>
      <param name="usePauseCut">[in] Whether to pause or cut after 'pauseCutValue' is reached. 'true' is to pause; 'false' is not to pause.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetPrintRate(System.Int32)">
      <summary>
            This function is used to set the printing speed.
            </summary>
      <param name="printSpeed">[in] Print speed. Range: 1~12; unit: IPS; default value: 2.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetPrintRate(System.Int32,System.Int32,System.Int32)">
      <summary>
            This function is used to set the print, feed, and backfeed speed.
            </summary>
      <param name="printSpeed">[in] Print speed. Range: 1~12; unit: IPS; default value: 2.</param>
      <param name="feedSpeed">[in] Feed speed. Range: 1~12; unit: IPS; default value: 2.</param>
      <param name="backfeedSpeed">[in] Backfeed speed. Range: 1~12; unit: IPS; default value: 2.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetPrintWidth(System.Int32)">
      <summary>
            This function is used to set the printing range, equivalent to the media width.
            </summary>
      <param name="width">[in] To set the mdeia width. Range: 2~width of printer; unit: pixels.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetReset">
      <summary>
            This function is to reboot the system and clear all data stored in the buffer and memory.
            </summary>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetSerial(System.Int32,BarcodePrinter_API.Comm.SerialParity,System.Int32,BarcodePrinter_API.Comm.SerialStopBits)">
      <summary>
            This function is used to set parameters of the printer's serial port (RS-232).
            </summary>
      <param name="baudRate">[in] Baud rate. Supports: 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200.</param>
      <param name="parity">[in] Parity-checking bits. Use <see cref="T:BarcodePrinter_API.Comm.SerialParity" /> enum to set up, the same as <see cref="T:System.IO.Ports.Parity" /> enum; support: SerialParity.None, SerialParity.Odd, SerialParity.Even.</param>
      <param name="dataBits">[in] Data bits value. Supports: 7, 8.</param>
      <param name="stopBits">[in] The stop bits value. Use <see cref="T:BarcodePrinter_API.Comm.SerialStopBits" /> enum to set up, the same as <see cref="T:System.IO.Ports.StopBits" /> enum; support: SerialStopBits.None, SerialStopBits.One.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_SetUtil.SetUnit(BarcodePrinter_API.Emulation.PPLZ.PPLZUnitType)">
      <summary>
            This function is to set unit of measurement of the printer as inches, millimeters, or pixels.
            </summary>
      <param name="unit">[in] To set the unit of measurement. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZUnitType" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil">
      <summary>
            This class provides methods for text-related programs of the PPLZ emulator. This class is used in PPLZ class.
            </summary>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil.#ctor(BarcodePrinter_API.Emulation.PPLZ.PPLZ)">
      <summary>
            This is the constructor.
            </summary>
      <param name="emulation">[in] Input a data type as reference of <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZ" /> object reference.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid PPLZ object reference.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil.PrintText(System.Int32,System.Int32,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,BarcodePrinter_API.Emulation.PPLZ.PPLZFont,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>
            This function is used to print the string with internal font of the printer.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="font">[in] Select font. The two types are bitmap font and scalable font; Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZFont" /> enum to set up.</param>
      <param name="width">
        <para>[in] Character width. Range: bitmap font to be 1~10 times of the original font (please refer to <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZFont">Size of bitmap font</see>).</para>
        <para>Scalable font. Range: 10~32000; unit: pixels.</para>
      </param>
      <param name="height">
        <para>[in] Character length. Range: bitmap font to be 1~10 times of the original font (please refer to <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZFont">Size of bitmap font</see>).</para>
        <para>Scalable font. Range: 10~32000; unit: pixels.</para>
      </param>
      <param name="data">[in] String to print. Data type: byte array.</param>
      <param name="increase">[in] Increment or decrement. If there is a "Serial Number" to be printed, the barcode information will be changed according to the value change of Serial Number, with 0~9 loop for numbers, and A~Z or a~z loop for alphabets.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil.PrintTextGraphic(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32)">
      <summary>
            This function is used to directly print text graphics converted using system fonts.
            </summary>
      <param name="x">[in] X-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="y">[in] Y-axis coordinate. Range: 0~32000; unit: pixels.</param>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="data">[in] String to print, not an empty string. Data type: Unicode.</param>
      <param name="formatType">[in] The data format of the graphic object to print. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="width">[in] User-defined width. Range: &gt;= 0; 0 means the system automatically calculates the width.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil.StoreTextGraphic(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String,System.String)">
      <summary>
            This function is used to download the text graphic converted from the system font, and store the graphic into the printer.
            </summary>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="data">[in] The string to convert into graphic file, cannot be empty string. Data type: Unicode.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil.StoreTextGraphic(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String,System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat)">
      <summary>
            This function is used to download the text graphic converted from the system font, and store the graphic into the printer.
            </summary>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="data">[in] The string to convert into graphic file, cannot be empty string. Data type: Unicode.</param>
      <param name="formatType">[in] The data format of the stored object. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="M:BarcodePrinter_API.Emulation.PPLZ.PPLZ_TextUtil.StoreTextGraphic(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,BarcodePrinter_API.Emulation.PPLZ.PPLZStorage,System.String,System.String,BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat,BarcodePrinter_API.Emulation.PPLZ.PPLZOrient,System.Int32)">
      <summary>
            This function is used to download the text graphic converted from the system font, and store the graphic into the printer.
            </summary>
      <param name="fontname">[in] Font name of the system. Data type: Unicode.</param>
      <param name="fontsize">[in] Font size. Range: &gt;= 0.</param>
      <param name="useBold">[in] Use of bold text. 'true' is to use; 'false' is not to use.</param>
      <param name="useItalic">[in] Use of italic text. 'true' is to use; 'false' is not to use.</param>
      <param name="useUnderline">[in] Use of underlined text. 'true' is to use; 'false' is not to use.</param>
      <param name="useStrikeout">[in] Use of strikethrough text. 'true' is to use; 'false' is not to use.</param>
      <param name="storageType">[in] Location of storage device. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage" /> enum to set up.</param>
      <param name="imagename">[in] The graphic name to save. Range: 1~8 alphanumeric (alphabets or numbers) characters.</param>
      <param name="data">[in] The string to convert into graphic file, cannot be empty string. Data type: Unicode.</param>
      <param name="formatType">[in] The data format of the stored object. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat" /> enum to set up.</param>
      <param name="orient">[in] Print orientation. Use <see cref="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient" /> enum to set up.</param>
      <param name="width">[in] User-defined width. Range: &gt;= 0; 0 means the system automatically calculates the width.</param>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterIllegalArgumentException">
            Invalid parameter or parameter is out of the valid range.
            </exception>
      <exception cref="T:BarcodePrinter_API.BarcodePrinterGeneralException">
            General error, byte array operation error, or generating graphic data failed.
            </exception>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType">
      <summary>
            This enumeration is used to set the one-dimensional barcode type.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Code_11">
      <summary>
            Code 11.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Interleaved_2_of_5">
      <summary>
            Interleaved 2 of 5.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Code_39">
      <summary>
            Code 39.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Planet_Code">
      <summary>
            Planet Code.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.EAN_8">
      <summary>
            EAN-8.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.UPC_E">
      <summary>
            UPC-E.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Code_93">
      <summary>
            Code 93.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Code_128">
      <summary>
            Code 128 Subset A,B,C, Code 128 UCC.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.EAN_13">
      <summary>
            EAN-13.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Industrial_2_of_5">
      <summary>
            Industrial 2 of 5.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Standard_2_of_5">
      <summary>
            Standard 2 of 5.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.ANSI_Codabar">
      <summary>
            ANSI Codabar.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.LOGMARS">
      <summary>
            LOGMARS.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.MSI">
      <summary>
            MSI.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.Plessey">
      <summary>
            Plessey.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.UPC_EAN_Extensions">
      <summary>
            UPC/EAN Extensions.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.UPC_A">
      <summary>
            UPC-A.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZBarCodeType.POSTAL">
      <summary>
            POSTAL.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat">
      <summary>
            This enumeration is used to set the data format of the object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat.Hex">
      <summary>
            Hexadecimal data.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat.Hex_Compressed">
      <summary>
            Compressed hexadecimal data.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat.Base64">
      <summary>
            Base64 data.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZDataFormat.Base64_LZ77">
      <summary>
            Base64 data compressed with LZ77.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZFont">
      <summary>
            This enumeration is used to set the internal font of the printer.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_A">
      <summary>
            Bitmap Font A, (Width,Height) = (5,9).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_B">
      <summary>
            Bitmap Font B, (Width,Height) = (7,11).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_C">
      <summary>
            Bitmap Font C, (Width,Height) = (10,18).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_D">
      <summary>
            Bitmap Font D, (Width,Height) = (10,18).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_E">
      <summary>
            Bitmap Font E, (Width,Height) = (15,28).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_F">
      <summary>
            Bitmap Font F, (Width,Height) = (13,26).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_G">
      <summary>
            Bitmap Font G, (Width,Height) = (40,60).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_H">
      <summary>
            Bitmap Font H, (Width,Height) = (13,21).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_Zero">
      <summary>
            Scalable Font Zero.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_P">
      <summary>
            Scalable Font P.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_Q">
      <summary>
            Scalable Font Q.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_R">
      <summary>
            Scalable Font R.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_S">
      <summary>
            Scalable Font S.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_T">
      <summary>
            Scalable Font T.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_U">
      <summary>
            Scalable Font U.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZFont.Font_V">
      <summary>
            Scalable Font V.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZMaxiCodeMode">
      <summary>
            This enumeration is used to set the MaxiCode mode.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMaxiCodeMode.Mode_2">
      <summary>
            Structured carrier message: Numeric postal code (U.S.).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMaxiCodeMode.Mode_3">
      <summary>
            Structured carrier message: Alphanumeric postal code (non-U.S.).
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaTrack">
      <summary>
            This enumeration is used to set the media detection mode of the printer.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaTrack.Continuous_Media">
      <summary>
            Continuous media.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaTrack.Non_Continuous_Mdeia_Web_Sensing">
      <summary>
            Non continuous, web sensing.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaTrack.Non_Continuous_Media_Mark_Sensing">
      <summary>
            Non continuous, mark sensing.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaType">
      <summary>
            This enumeration is used to set the media type.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaType.Thermal_Transfer_Media">
      <summary>
            Thermal transfer.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZMediaType.Direct_Thermal_Media">
      <summary>
            Direct thermal.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient">
      <summary>
            This enumeration is used to set the rotation angle and direction of the object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient.Clockwise_0_Degrees">
      <summary>
            Clockwise 0 Degrees.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient.Clockwise_90_Degrees">
      <summary>
            Clockwise 90 Degrees.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient.Clockwise_180_Degrees">
      <summary>
            Clockwise 180 Degrees.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZOrient.Clockwise_270_Degrees">
      <summary>
            Clockwise 270 Degrees.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZPrintMode">
      <summary>
            This enumeration is used to set the action mode for label paper after printing.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZPrintMode.Tear_Off">
      <summary>
            Tear off.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZPrintMode.Peel_Off">
      <summary>
            Peel off.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZPrintMode.Cutter">
      <summary>
            Cutter.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect">
      <summary>
            This enumeration is used to set the error correction level of QR Code.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect.High_Density">
      <summary>
            High Density, recovery 7%.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect.Standard">
      <summary>
            Standard, recovery 15%.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect.High_Reliability">
      <summary>
            High Reliability, recovery 25%.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeErrCorrect.Ultra_High_Reliability">
      <summary>
            Ultra High Reliability, recovery 30%.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeModel">
      <summary>
            This enumeration is used to set the QR Code model.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeModel.Model_1">
      <summary>
            Original.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZQRCodeModel.Model_2">
      <summary>
            Enhanced Recommended.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType">
      <summary>
            This enumeration is used to set the symbology type of RSS (GS1 DataBar).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType.RSS_14">
      <summary>
            RSS-14 (GS1 DataBar Omnidirectional).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType.RSS_Truncated">
      <summary>
            RSS Truncated (GS1 DataBar Truncated).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType.RSS_Stacked">
      <summary>
            RSS Stacked (GS1 DataBar Stacked).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType.RSS_Stacked_Omnidirectional">
      <summary>
            RSS Stacked Omnidirectional (GS1 DataBar Stacked Omnidirectional).
             </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType.RSS_Limited">
      <summary>
            RSS Limited (GS1 DataBar Limited).
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZRSSType.RSS_Expanded">
      <summary>
            RSS Expanded (GS1 DataBar Expanded).
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage">
      <summary>
            This enumeration is used to set the storage device for the object.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage.Dram">
      <summary>
            DRAM.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage.Flash">
      <summary>
            Flash Memory.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZStorage.Extra_Storage">
      <summary>
            External storage media.
            </summary>
    </member>
    <member name="T:BarcodePrinter_API.Emulation.PPLZ.PPLZUnitType">
      <summary>
            This enumeration is used to set the unit of measure for the printer.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZUnitType.Dot">
      <summary>
            Pixels.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZUnitType.Inch">
      <summary>
            Inches.
            </summary>
    </member>
    <member name="F:BarcodePrinter_API.Emulation.PPLZ.PPLZUnitType.Millimeter">
      <summary>
            Millimeters.
            </summary>
    </member>
  </members>
</doc>